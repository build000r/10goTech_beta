{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Link from \"next/link\";\nimport { Button, Container, Grid, Header, Icon, Item, Segment } from \"semantic-ui-react\";\nimport { useRouter } from \"next/router\";\nimport { buildClient } from \"../../../../api/build-client\";\nimport { useAuth } from \"../../../../hooks/use-auth\";\nimport Layout from \"../../../../components/layouts\";\n\nconst index = ({\n  user,\n  siteOwnerId\n}) => {\n  const {\n    site\n  } = useRouter().query;\n  console.log(site);\n\n  const isTempTitle = sitetitle => sitetitle.includes(\"Change_This_Title\");\n\n  const showItem = (href, link, meta) => /*#__PURE__*/_jsx(Item, {\n    children: /*#__PURE__*/_jsxs(Item.Content, {\n      children: [/*#__PURE__*/_jsx(Item.Header, {\n        as: \"a\",\n        children: /*#__PURE__*/_jsx(Link, {\n          href: href,\n          children: link\n        })\n      }), /*#__PURE__*/_jsx(Item.Meta, {\n        children: meta\n      })]\n    })\n  });\n\n  const renderIfAuth = () => /*#__PURE__*/_jsx(Layout, {\n    smallLeaderboard: true,\n    leaderboardData: {\n      header: \"Admin Account Menu\",\n      subHeader: \"Update the content and configuration of your website\",\n      dividerText: \"What would you like to do?\"\n    },\n    children: /*#__PURE__*/_jsxs(Item.Group, {\n      children: [showItem(`/user/${site}/services`, \"Services\", \"Manage the photos, copy & follow up emails associated with each service you provide.\"), showItem(`/user/${site}/admin/update`, \"Homepage & Settings\", \"Homepage content, email settings, and other system settings \"), showItem(`/user/${site}/admin/orders`, \"Orders\", \"A list of all of the orders that have been placed on your website.\"), showItem(`/user/${site}/admin/users`, \"Users\", \"A list of all of the users who have signed up for your website.\"), showItem(`/admin/${user.userOfSite}/account/${site}`, \"Subscription\", \"Manage all of your websites, payment methods, and subscriptions.\"), showItem(`/user/${site}/auth/signout`, \"Sign out\", \"\")]\n    })\n  });\n\n  return useAuth({\n    user,\n    currentUrlSite: site,\n    renderIfAuth,\n    siteOwnerId\n  });\n  return renderIfAuth();\n};\n\nindex.getInitialProps = async context => {\n  const {\n    data\n  } = await buildClient(context).get(`/api/site/${context.query.site}`);\n  const {\n    data: currentUser\n  } = await buildClient(context).get(\"/api/users/currentuser\");\n  const siteOwnerId = data.ownerId;\n  const user = currentUser.currentUser;\n  return {\n    user,\n    siteOwnerId\n  };\n};\n\nexport default index;","map":null,"metadata":{},"sourceType":"module"}