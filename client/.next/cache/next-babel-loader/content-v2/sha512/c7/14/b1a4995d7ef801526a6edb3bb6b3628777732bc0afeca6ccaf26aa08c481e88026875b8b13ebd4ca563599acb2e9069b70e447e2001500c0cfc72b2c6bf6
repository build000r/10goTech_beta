{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Card, Button, Message, Container, Segment, Header } from \"semantic-ui-react\";\nimport { buildClient } from \"../../../../api/build-client\";\nimport Layout from \"../../../../components/layouts\";\nimport Link from \"next/link\";\nimport { Fragment } from \"react\";\nimport { useAuth } from \"../../../../hooks/use-auth\";\nimport { useRouter } from \"next/router\";\n\nvar sites = function sites(_ref) {\n  var user = _ref.user,\n      sites = _ref.sites;\n\n  var isTempTitle = function isTempTitle(sitetitle) {\n    return sitetitle.includes(\"Change_This_Title\");\n  };\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  var renderIfAuth = function renderIfAuth() {\n    return /*#__PURE__*/_jsx(Layout, {\n      smallLeaderboard: true,\n      leaderboardData: {\n        header: \"Manage your Websites & Subscriptions\",\n        subHeader: \"\",\n        btnPath: \"/admin/\".concat(user.userOfSite, \"/onboard/select-package\"),\n        btnText: \"Create New Website\",\n        dividerText: \"Your Current Websites\"\n      },\n      children: /*#__PURE__*/_jsx(Card.Group, {\n        centered: true,\n        children: sites.length > 0 ? sites.map(function (s) {\n          return /*#__PURE__*/_jsxs(Card, {\n            children: [/*#__PURE__*/_jsx(Card.Content, {\n              children: /*#__PURE__*/_jsx(Card.Header, {\n                as: \"h3\",\n                children: isTempTitle(s.title) ? \"Your New Site!\" : capitalizeFirstLetter(s.title) + \" Site\"\n              })\n            }), /*#__PURE__*/_jsx(Card.Content, {\n              extra: true,\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: \"ui two buttons\",\n                children: [/*#__PURE__*/_jsx(Link, {\n                  href: \"/admin/\".concat(user.userOfSite, \"/account/\").concat(s.title),\n                  children: /*#__PURE__*/_jsx(Button, {\n                    basic: true,\n                    color: \"blue\",\n                    children: \"Subscription\"\n                  })\n                }), /*#__PURE__*/_jsx(Link, {\n                  href: \"/user/\".concat(s.title, \"/admin\"),\n                  children: /*#__PURE__*/_jsx(Button, {\n                    basic: true,\n                    color: \"green\",\n                    children: \"Site\"\n                  })\n                })]\n              })\n            })]\n          }, s.title);\n        }) : \"no sites created yet\"\n      })\n    });\n  };\n\n  return useAuth({\n    user: user,\n    currentUrlSite: useRouter().query.site,\n    renderIfAuth: renderIfAuth\n  });\n};\n\nsites.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _yield$buildClient$ge, currentUser, user, _yield$buildClient$ge2, userSites, _sites;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return buildClient(context).get(\"/api/users/currentuser\");\n\n          case 2:\n            _yield$buildClient$ge = _context.sent;\n            currentUser = _yield$buildClient$ge.data;\n            user = currentUser.currentUser;\n\n            if (!user) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 8;\n            return buildClient(context).get(\"/api/site\");\n\n          case 8:\n            _yield$buildClient$ge2 = _context.sent;\n            userSites = _yield$buildClient$ge2.data;\n            _sites = userSites.userSites;\n            return _context.abrupt(\"return\", {\n              user: user,\n              sites: _sites\n            });\n\n          case 14:\n            return _context.abrupt(\"return\", {\n              user: user\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default sites;","map":null,"metadata":{},"sourceType":"module"}