{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useRouter } from \"next/router\";\nimport { buildClient } from \"../../../../api/build-client\";\nimport { useAuth } from \"../../../../hooks/use-auth\";\nimport { CurrentSubscription } from \"../../../../components/payment/CurrentSubscription\";\nimport Layout from \"../../../../components/layouts\";\nimport { Fragment } from \"react\";\n\nconst subscriptionDetails = ({\n  user,\n  sub,\n  pay\n}) => {\n  const {\n    subscription\n  } = useRouter().query;\n\n  const renderIfAuth = () => {\n    return /*#__PURE__*/_jsx(Layout, {\n      smallLeaderboard: true,\n      leaderboardData: {\n        header: `${subscription} subscription details`,\n        subHeader: `id: ${sub.id}`,\n        btnText: \"\",\n        btnPath: \"\",\n        dividerText: \"Update or Cancel\"\n      },\n      children: /*#__PURE__*/_jsx(Fragment, {\n        children: /*#__PURE__*/_jsx(CurrentSubscription, {\n          subscription: sub,\n          pay: pay,\n          site: subscription,\n          userOfSite: user.userOfSite\n        })\n      })\n    });\n  };\n\n  return useAuth({\n    user,\n    currentUrlSite: useRouter().query.site,\n    renderIfAuth\n  });\n};\n\nsubscriptionDetails.getInitialProps = async context => {\n  const {\n    data: currentUser\n  } = await buildClient(context).get(\"/api/users/currentuser\");\n  const user = currentUser.currentUser;\n  const {\n    data\n  } = await buildClient(context).get(`/api/site/${context.query.subscription}`);\n  const {\n    data: subscription\n  } = await buildClient(context).get(`/api/site-subscriptions/subscription/${data.subscriptionId}`);\n  const sub = subscription.subscription;\n  const pay = subscription.paymentMethod;\n  console.log(sub, pay);\n  return {\n    user,\n    sub,\n    pay\n  };\n};\n\nexport default subscriptionDetails;","map":null,"metadata":{},"sourceType":"module"}