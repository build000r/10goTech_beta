{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from \"react\";\nimport { Item, Divider, Segment, Button, Header, Label, Card, Dropdown, Container } from \"semantic-ui-react\";\nimport { buildClient } from \"../../../../api/build-client\";\nimport { useMediaQuery } from \"../../../../hooks/use-media-query\";\nimport { useRequest } from \"../../../../hooks/use-request\";\nimport Router, { useRouter } from \"next/router\";\nimport Layout from \"../../../../components/layouts\";\n\nvar services = function services(_ref) {\n  var serverOrders = _ref.serverOrders,\n      siteUsers = _ref.siteUsers;\n\n  var _useState = useState(serverOrders),\n      orders = _useState[0],\n      setOrders = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      statusFilter = _useState2[0],\n      setStatusFilter = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      statusMsg = _useState3[0],\n      setStatusMsg = _useState3[1];\n\n  var _useState4 = useState(true),\n      sortNew = _useState4[0],\n      setSortNew = _useState4[1];\n\n  if (orders && orders.length === 0) {\n    return /*#__PURE__*/_jsx(Container, {\n      style: {\n        minHeight: \"90vh\"\n      },\n      children: /*#__PURE__*/_jsx(Header, {\n        children: \"When you receive your first order, it will show up here.\"\n      })\n    });\n  }\n\n  var path = useRouter().asPath;\n\n  var _useState5 = useState({\n    ownerNote: \"Order is currently being reviewed\",\n    crmStatus: \"\",\n    orderId: \"\",\n    loading: false\n  }),\n      values = _useState5[0],\n      setValues = _useState5[1];\n\n  var ownerNote = values.ownerNote,\n      crmStatus = values.crmStatus,\n      orderId = values.orderId;\n\n  var _useRequest = useRequest({\n    url: \"/api/order\",\n    // MUST CHANGE\n    method: \"put\",\n    body: {\n      ownerNote: ownerNote,\n      crmStatus: crmStatus,\n      orderId: orderId\n    },\n    onSuccess: function onSuccess() {\n      return Router.push(path);\n    }\n  }),\n      doRequest = _useRequest.doRequest,\n      errors = _useRequest.errors;\n\n  var options = [{\n    key: \"created\",\n    icon: \"edit\",\n    text: \"Created\",\n    value: \"created\"\n  }, {\n    key: \"following-up\",\n    icon: \"phone\",\n    text: \"Following up\",\n    value: \"following-up\"\n  }, {\n    key: \"closed-won\",\n    icon: \"check\",\n    text: \"Closed won\",\n    value: \"closed-won\"\n  }, {\n    key: \"closed-lost\",\n    icon: \"delete\",\n    text: \"Closed lost\",\n    value: \"closed-lost\"\n  }];\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, e.target.value)));\n    };\n  };\n\n  var clickSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault(); // keep browser from reloading when btn click\n\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: true\n              }));\n              _context.next = 4;\n              return doRequest();\n\n            case 4:\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: false\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function clickSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var updateOrderStatus = function updateOrderStatus(orderId) {\n    return /*#__PURE__*/_jsxs(Button.Group, {\n      floated: \"right\",\n      color: \"teal\",\n      children: [/*#__PURE__*/_jsx(Button, {\n        onClick: clickSubmit,\n        children: \"Update Status\"\n      }), /*#__PURE__*/_jsx(Dropdown, {\n        onChange: function onChange(e) {\n          return setValues(_objectSpread(_objectSpread({}, values), {}, {\n            crmStatus: options.filter(function (o) {\n              return o.text === e.target.outerText;\n            })[0].key,\n            orderId: orderId\n          }));\n        },\n        className: \"button icon\",\n        floating: true,\n        options: options,\n        trigger: /*#__PURE__*/_jsx(_Fragment, {})\n      })]\n    });\n  }; // do request update status /api/order put\n\n\n  var filterByStatus = function filterByStatus(status) {\n    var ordersWithStatus = serverOrders.filter(function (o) {\n      return o.crmStatus === status;\n    });\n    setStatusMsg(\"\");\n    ordersWithStatus.length > 0 ? setOrders(ordersWithStatus) : setStatusMsg(\"There are no \".concat(status, \" items\"));\n  };\n\n  var sortByNew = function sortByNew(bool) {\n    bool ? setOrders(orders.sort(function (a, b) {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    })) : setOrders(orders.sort(function (b, a) {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    }));\n    setSortNew(bool);\n  };\n\n  var showProducts = function showProducts(products) {\n    return products.map(function (product) {\n      var brief = product.brief,\n          clickOptionsSelected = product.clickOptionsSelected,\n          id = product.id,\n          site = product.site,\n          title = product.title,\n          userMessage = product.userMessage;\n      return /*#__PURE__*/_jsxs(Item, {\n        children: [/*#__PURE__*/_jsx(Divider, {\n          horizontal: true,\n          children: \"Service Requested\"\n        }), \" \", /*#__PURE__*/_jsxs(Item.Content, {\n          children: [/*#__PURE__*/_jsx(Item.Header, {\n            as: \"h4\",\n            children: title\n          }), /*#__PURE__*/_jsx(Item.Meta, {\n            children: brief\n          }), clickOptionsSelected.map(function (o, i) {\n            return /*#__PURE__*/_jsxs(Item.Extra, {\n              children: [/*#__PURE__*/_jsx(\"i\", {\n                className: \"check icon\"\n              }), o.name]\n            }, i);\n          }), /*#__PURE__*/_jsxs(Item.Description, {\n            children: [\" \", /*#__PURE__*/_jsx(\"i\", {\n              className: \"sticky note outline icon\"\n            }), \" \", userMessage]\n          })]\n        })]\n      }, id);\n    });\n  };\n\n  var getOrderer = function getOrderer(id) {\n    return siteUsers.filter(function (u) {\n      return u.id === id || u._id === id;\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(Layout, {\n    smallLeaderboard: true,\n    leaderboardData: {\n      header: \"Order History\",\n      subHeader: \"Keep track of clients, and the status of their projects.\",\n      dividerText: \"Service Requests\"\n    },\n    children: [/*#__PURE__*/_jsx(Item, {\n      style: {\n        width: \"100%\",\n        marginBottom: \"30px\"\n      },\n      children: /*#__PURE__*/_jsxs(Item.Content, {\n        children: [/*#__PURE__*/_jsx(Item.Meta, {\n          children: statusMsg\n        }), /*#__PURE__*/_jsxs(Button.Group, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsx(Button, {\n            onClick: function onClick() {\n              return filterByStatus(\"created\");\n            },\n            children: \"New\"\n          }), /*#__PURE__*/_jsx(Button, {\n            onClick: function onClick() {\n              return filterByStatus(\"following-up\");\n            },\n            children: \"Following-Up\"\n          }), /*#__PURE__*/_jsx(Button, {\n            onClick: function onClick() {\n              return filterByStatus(\"closed-won\");\n            },\n            children: \"Won\"\n          }), /*#__PURE__*/_jsx(Button, {\n            onClick: function onClick() {\n              return filterByStatus(\"closed-lost\");\n            },\n            children: \"Lost\"\n          })]\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Card.Group, {\n      centered: true,\n      itemsPerRow: useMediaQuery(1000) ? 1 : 3,\n      children: orders.map(function (order) {\n        var crmStatus = order.crmStatus,\n            userId = order.userId,\n            products = order.products,\n            id = order.id;\n        var orderer;\n\n        if (id) {\n          orderer = getOrderer(userId)[0];\n        }\n\n        var _orderer = orderer,\n            name = _orderer.name,\n            email = _orderer.email,\n            phone = _orderer.phone,\n            createdAt = _orderer.createdAt;\n        return /*#__PURE__*/_jsxs(Card, {\n          children: [/*#__PURE__*/_jsxs(Card.Content, {\n            children: [/*#__PURE__*/_jsx(Card.Meta, {\n              children: /*#__PURE__*/_jsx(Header, {\n                as: \"h4\"\n              })\n            }), /*#__PURE__*/_jsx(Item, {\n              children: /*#__PURE__*/_jsxs(Item.Content, {\n                children: [/*#__PURE__*/_jsx(Divider, {\n                  horizontal: true,\n                  children: \"Customer info\"\n                }), /*#__PURE__*/_jsx(Item.Meta, {\n                  children: /*#__PURE__*/_jsx(\"span\", {\n                    children: name ? name : null\n                  })\n                }), /*#__PURE__*/_jsx(Item.Meta, {\n                  children: /*#__PURE__*/_jsx(\"span\", {\n                    children: email\n                  })\n                }), /*#__PURE__*/_jsx(Item.Meta, {\n                  children: /*#__PURE__*/_jsx(\"span\", {\n                    children: phone ? \"Phone #: \".concat(phone, \" \") : \"\"\n                  })\n                }), /*#__PURE__*/_jsx(Item.Description, {\n                  children: showProducts(products)\n                })]\n              })\n            })]\n          }), /*#__PURE__*/_jsxs(Card.Content, {\n            extra: true,\n            children: [updateOrderStatus(id), /*#__PURE__*/_jsx(Label, {\n              children: crmStatus\n            })]\n          })]\n        }, id);\n      })\n    })]\n  });\n};\n\nservices.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(context) {\n    var _yield$buildClient$ge, orders, _yield$buildClient$ge2, siteUsers, serverOrders;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return buildClient(context).get(\"/api/orders/\".concat(context.query.site));\n\n          case 2:\n            _yield$buildClient$ge = _context2.sent;\n            orders = _yield$buildClient$ge.data;\n            _context2.next = 6;\n            return buildClient(context).get(\"/api/users/by-site/\".concat(context.query.site));\n\n          case 6:\n            _yield$buildClient$ge2 = _context2.sent;\n            siteUsers = _yield$buildClient$ge2.data;\n            serverOrders = orders.sort(function (a, b) {\n              return new Date(b.createdAt) - new Date(a.createdAt);\n            });\n            return _context2.abrupt(\"return\", {\n              serverOrders: serverOrders,\n              siteUsers: siteUsers\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default services;","map":null,"metadata":{},"sourceType":"module"}