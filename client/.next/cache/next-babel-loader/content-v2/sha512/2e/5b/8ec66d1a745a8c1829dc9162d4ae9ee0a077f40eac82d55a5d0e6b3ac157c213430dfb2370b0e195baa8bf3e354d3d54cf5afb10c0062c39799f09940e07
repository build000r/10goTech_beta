{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Router from \"next/router\";\nimport { useState } from \"react\";\nimport { Form, Input, Divider, Header, Icon, Message } from \"semantic-ui-react\";\nimport { useRequest } from \"../../hooks/use-request\";\n\nconst EmailConfig = ({\n  config\n}) => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    loading: false,\n    submitted: false,\n    title: config.title,\n    mailjetFromEmail: config.mailjetFromEmail,\n    mailjetFromName: config.mailjetFromName\n  });\n  const {\n    doRequest,\n    errors,\n    errMsgArr\n  } = useRequest({\n    url: `/api/notification/config`,\n    // MUST CHANGE\n    method: \"put\",\n    body: {\n      title: values.title,\n      mailjetFromEmail: values.mailjetFromEmail,\n      mailjetFromName: values.mailjetFromName\n    }\n  });\n\n  const handleChange = name => e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: e.target.value\n    }));\n  };\n\n  const clickSubmit = async event => {\n    event.preventDefault(); // keep browser from reloading when btn click\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    await doRequest();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: false,\n      submitted: true\n    }));\n  };\n\n  return /*#__PURE__*/_jsxs(Form, {\n    onSubmit: clickSubmit,\n    loading: values.loading,\n    children: [/*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), errors, /*#__PURE__*/_jsx(Divider, {\n      horizontal: true,\n      children: /*#__PURE__*/_jsxs(Header, {\n        as: \"h4\",\n        children: [/*#__PURE__*/_jsx(Icon, {\n          name: \"mail\"\n        }), \"Email Automation Config\"]\n      })\n    }), \" \", /*#__PURE__*/_jsxs(Form.Field, {\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        children: \"Email\"\n      }), /*#__PURE__*/_jsx(Input, {\n        value: values.mailjetFromEmail,\n        placeholder: values.mailjetFromEmail || \"Enter new sendgrid email blurb...\",\n        onChange: handleChange(\"mailjetFromEmail\")\n      })]\n    }), /*#__PURE__*/_jsxs(Form.Field, {\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        children: \"Name\"\n      }), /*#__PURE__*/_jsx(Input, {\n        value: values.mailjetFromName,\n        placeholder: values.mailjetFromName || \"Enter new sendgrid email blurb...\",\n        onChange: handleChange(\"mailjetFromName\")\n      })]\n    }), values.submitted ? /*#__PURE__*/_jsx(Message, {\n      header: \"Check your email\",\n      content: \"Follow the steps sent from `MailJet` to activate your new email\"\n    }) : \"\", /*#__PURE__*/_jsx(Form.Button, {\n      floated: \"right\",\n      children: \"Update Email Configuration\"\n    })]\n  });\n};\n\nexport default EmailConfig;","map":null,"metadata":{},"sourceType":"module"}