{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Icon, Card, Header } from \"semantic-ui-react\";\nimport { buildClient } from \"../../../../api/build-client\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { Fragment, useState } from \"react\";\nimport Layout from \"../../../../components/layouts\";\n\nconst index = ({\n  packages\n}) => {\n  const {\n    0: active,\n    1: setActive\n  } = useState(\"solo\");\n  const {\n    site\n  } = useRouter().query;\n  const activePackage = packages.find((p, i) => {\n    if (p.title === active) {\n      return p;\n    }\n  });\n  const {\n    description,\n    freeTrial,\n    sites,\n    monthlyPrice,\n    title\n  } = activePackage;\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  const showPackageIncludes = () => /*#__PURE__*/_jsxs(Card, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxs(Card.Content, {\n      extra: true,\n      children: [/*#__PURE__*/_jsx(Icon, {\n        name: \"check\"\n      }), \" \", sites, \" Website\"]\n    }), /*#__PURE__*/_jsxs(Card.Content, {\n      extra: true,\n      children: [/*#__PURE__*/_jsx(Icon, {\n        name: \"check\"\n      }), \" \", freeTrial, \" day free trial (1 click cancellation)\"]\n    }), /*#__PURE__*/_jsxs(Card.Content, {\n      extra: true,\n      children: [/*#__PURE__*/_jsx(Icon, {\n        name: \"check\"\n      }), \" Custom Domain\"]\n    }), /*#__PURE__*/_jsxs(Card.Content, {\n      extra: true,\n      children: [/*#__PURE__*/_jsx(Icon, {\n        name: \"check\"\n      }), \" Adminstrator Account\"]\n    }), /*#__PURE__*/_jsxs(Card.Content, {\n      extra: true,\n      children: [/*#__PURE__*/_jsx(Icon, {\n        name: \"check\"\n      }), \" Client Accounts\"]\n    }), /*#__PURE__*/_jsxs(Card.Content, {\n      extra: true,\n      children: [/*#__PURE__*/_jsx(Icon, {\n        name: \"check\"\n      }), \" Customer Relationship Manager\"]\n    }), /*#__PURE__*/_jsxs(Card.Content, {\n      extra: true,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsx(Icon, {\n        name: \"dollar sign\"\n      }), monthlyPrice, \" per month\"]\n    })]\n  });\n\n  return /*#__PURE__*/_jsx(Fragment, {\n    children: /*#__PURE__*/_jsxs(Layout, {\n      smallLeaderboard: true,\n      leaderboardData: {\n        header: \"Create your website\",\n        subHeader: \"Cancel anytime & enjoy a 7 day free trial\",\n        dividerText: \"Get Started\"\n      },\n      children: [showPackageIncludes(), /*#__PURE__*/_jsx(Link, {\n        href: `/admin/${site}/signup`,\n        children: /*#__PURE__*/_jsx(Button, {\n          attached: \"bottom\",\n          fluid: true,\n          color: \"linkedin\",\n          children: \"Create an account to get started\"\n        })\n      })]\n    })\n  });\n};\n\nindex.getInitialProps = async context => {\n  const {\n    data\n  } = await buildClient(context).get(\"/api/site-subscription/rfp\");\n  return _objectSpread({}, data);\n};\n\nexport default index;","map":null,"metadata":{},"sourceType":"module"}