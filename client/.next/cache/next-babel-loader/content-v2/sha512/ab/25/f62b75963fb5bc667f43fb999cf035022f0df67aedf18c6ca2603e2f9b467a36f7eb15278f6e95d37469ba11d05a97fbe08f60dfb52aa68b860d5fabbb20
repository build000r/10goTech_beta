{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport Link from \"next/link\";\nimport { Header, Segment, Divider } from \"semantic-ui-react\";\nimport Card from \"../../../components/user-site/CartCard\";\nimport Checkout from \"../../../components/user-site/Checkout\";\nimport { getCart } from \"../../../hooks/cart-helpers\";\nimport { useRouter } from \"next/router\";\nimport { buildClient } from \"../../../api/build-client\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport Layout from \"../../../components/layouts\";\n\nconst Cart = ({\n  user\n}) => {\n  const {\n    0: items,\n    1: setItems\n  } = useState([]);\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n  const {\n    0: run,\n    1: setRun\n  } = useState(false); // to avoid infinite loop\n\n  const link = useRouter().query.site;\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    setItems(getCart());\n  }, [run]);\n\n  const showItems = () => /*#__PURE__*/_jsx(Segment, {\n    children: items.map((product, i) => /*#__PURE__*/_jsxs(Fragment, {\n      children: [/*#__PURE__*/_jsx(Card, {\n        product: product,\n        showAddToCartButton: false,\n        cartUpdate: true,\n        showRemoveItemButton: true,\n        run: run,\n        setRun: setRun\n      }, i), /*#__PURE__*/_jsx(Divider, {})]\n    }))\n  });\n\n  const noItemsMessage = () => {\n    if (success) {\n      return \"\";\n    } else {\n      return /*#__PURE__*/_jsxs(Fragment, {\n        children: [/*#__PURE__*/_jsx(Header, {\n          children: \"Cart Empty\"\n        }), /*#__PURE__*/_jsx(Link, {\n          href: `/user/${link}/services`,\n          children: \"Shop for services\"\n        })]\n      });\n    }\n  };\n\n  const renderIfAuth = () => /*#__PURE__*/_jsxs(Layout, {\n    smallLeaderboard: true,\n    leaderboardData: {\n      header: `There are ${items.length} item${items.length > 0 ? \"s\" : \"\"} in your order`,\n      subHeader: \"Shop for services, and submit the details when ready.\",\n      dividerText: \"Items\"\n    },\n    children: [/*#__PURE__*/_jsx(Checkout, {\n      products: items.map(i => i.item),\n      user: user,\n      setRun: setRun,\n      run: run,\n      tellSuccess: bool => {\n        setSuccess(bool);\n      }\n    }), items.length > 0 ? showItems(items) : noItemsMessage()]\n  });\n\n  return useAuth({\n    user,\n    currentUrlSite: link,\n    renderIfAuth\n  });\n};\n\nCart.getInitialProps = async context => {\n  const client = buildClient(context);\n  const {\n    data: currentUser\n  } = await client.get(\"/api/users/currentuser\");\n  const user = currentUser.currentUser;\n  return {\n    user\n  };\n};\n\nexport default Cart;","map":null,"metadata":{},"sourceType":"module"}