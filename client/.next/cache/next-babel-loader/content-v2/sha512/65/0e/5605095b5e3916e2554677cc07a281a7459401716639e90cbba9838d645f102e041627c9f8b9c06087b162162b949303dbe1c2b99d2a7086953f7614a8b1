{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport { useState } from \"react\";\nimport { Form, Input, Message, Header, Segment, Container } from \"semantic-ui-react\";\n\nconst UploadImage = ({\n  productId,\n  path,\n  ownerId\n}) => {\n  const {\n    0: photo,\n    1: setPhoto\n  } = useState();\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    errorMessage: null,\n    loading: false\n  });\n  const {\n    errorMessage,\n    loading\n  } = values;\n\n  const onFormSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"photo\", photo);\n    formData.append(\"productId\", productId);\n    formData.append(\"ownerId\", ownerId);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    setValues({\n      values,\n      loading: true\n    });\n\n    try {\n      const res = await axios.post(\"/api/photo\", formData, config);\n    } catch (error) {\n      setValues({\n        values,\n        loading: false,\n        error: \"Issue uploading image\"\n      });\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: false\n    }));\n    Router.push(path);\n  };\n\n  const onChange = e => {\n    setPhoto(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsx(Container, {\n    children: /*#__PURE__*/_jsx(Segment, {\n      children: /*#__PURE__*/_jsxs(Form, {\n        onSubmit: onFormSubmit,\n        loading: loading,\n        children: [/*#__PURE__*/_jsx(Header, {\n          as: \"h2\",\n          children: \"Photo Upload\"\n        }), /*#__PURE__*/_jsx(Form.Field, {\n          children: /*#__PURE__*/_jsx(Input, {\n            type: \"file\",\n            name: \"myImage\",\n            onChange: onChange\n          })\n        }), /*#__PURE__*/_jsx(Form.Field, {\n          children: /*#__PURE__*/_jsx(Form.Button, {\n            onClick: onFormSubmit,\n            attached: \"bottom\",\n            type: \"submit\",\n            fluid: true,\n            positive: true,\n            children: \"Upload\"\n          })\n        }), errorMessage ? /*#__PURE__*/_jsx(Message, {\n          negative: true,\n          children: errorMessage\n        }) : \"\"]\n      })\n    })\n  });\n};\n\nexport default UploadImage;","map":null,"metadata":{},"sourceType":"module"}