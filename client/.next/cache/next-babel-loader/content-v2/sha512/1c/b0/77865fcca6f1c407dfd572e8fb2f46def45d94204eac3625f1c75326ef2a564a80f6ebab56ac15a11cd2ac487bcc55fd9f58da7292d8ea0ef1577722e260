{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { buildClient } from \"../api/build-client\";\nimport { useSiteType } from \"./use-site-type\";\n\nvar checkExistenceOfSite = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var context, _yield$buildClient$ge, site, siteExists;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            context = _ref.context;\n            _context.prev = 1;\n            _context.next = 4;\n            return buildClient(context).get(\"/api/site/\".concat(context.query.site));\n\n          case 4:\n            _yield$buildClient$ge = _context.sent;\n            site = _yield$buildClient$ge.data;\n            siteExists = useSiteType({\n              siteExists: true,\n              ownerId: site.ownerId,\n              path: context.pathname\n            });\n            return _context.abrupt(\"return\", {\n              siteExists: siteExists,\n              siteInfo: site\n            });\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", {\n              siteExists: false,\n              siteInfo: null\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 10]]);\n  }));\n\n  return function checkExistenceOfSite(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport { checkExistenceOfSite };","map":null,"metadata":{},"sourceType":"module"}