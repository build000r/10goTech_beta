{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, Fragment, useEffect } from \"react\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport { useRequest } from \"../../hooks/use-request\";\nimport Router, { useRouter } from \"next/router\";\n\nconst Signup = ({\n  createSitePermission\n}) => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: \"\",\n    phone: null,\n    email: \"\",\n    password: \"\",\n    success: false,\n    loading: false\n  });\n  const {\n    name,\n    phone,\n    email,\n    password,\n    success,\n    loading\n  } = values;\n  const {\n    doRequest,\n    errors\n  } = useRequest({\n    url: `/api/users/signup/${useRouter().query.site}`,\n    // MUST CHANGE\n    method: \"post\",\n    body: {\n      email,\n      password,\n      name,\n      phone,\n      createSitePermission\n    }\n  });\n\n  const handleChange = name => e => {\n    if (name === \"phone\" && /^\\d+$/.test(e.target.value) === false && e.nativeEvent.inputType !== \"deleteContentBackward\") {\n      return;\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: e.target.value\n    }));\n  };\n\n  const clickSubmit = async event => {\n    event.preventDefault(); // keep browser from reloading when btn click\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    const response = await doRequest();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: false\n    }));\n\n    if (response && response.token) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        success: true\n      }));\n    }\n  };\n\n  return success ? /*#__PURE__*/_jsx(Message, {\n    success: true,\n    header: `Activation email sent to ${email}`\n  }) : /*#__PURE__*/_jsx(Form, {\n    loading: loading,\n    children: /*#__PURE__*/_jsxs(Fragment, {\n      children: [/*#__PURE__*/_jsx(Form.Input, {\n        onChange: handleChange(\"name\"),\n        value: name,\n        fluid: true,\n        placeholder: \"Name\",\n        type: \"text\"\n      }), /*#__PURE__*/_jsx(Form.Input, {\n        onChange: handleChange(\"phone\"),\n        value: phone,\n        fluid: true,\n        placeholder: \"Phone\",\n        type: \"text\"\n      }), /*#__PURE__*/_jsx(Form.Input, {\n        onChange: handleChange(\"email\"),\n        value: email,\n        fluid: true,\n        placeholder: \"Email\",\n        type: \"email\"\n      }), /*#__PURE__*/_jsx(Form.Input, {\n        onChange: handleChange(\"password\"),\n        value: password,\n        fluid: true,\n        placeholder: \"Password\",\n        type: \"Password\"\n      }), errors, /*#__PURE__*/_jsx(Form.Button, {\n        fluid: true,\n        onClick: clickSubmit,\n        children: \"Sign Up\"\n      }), /*#__PURE__*/_jsx(Message, {\n        children: \"When you click \\\"signup\\\" you will be sent an email to confirm your account.\"\n      })]\n    })\n  });\n};\n\nexport { Signup };","map":null,"metadata":{},"sourceType":"module"}