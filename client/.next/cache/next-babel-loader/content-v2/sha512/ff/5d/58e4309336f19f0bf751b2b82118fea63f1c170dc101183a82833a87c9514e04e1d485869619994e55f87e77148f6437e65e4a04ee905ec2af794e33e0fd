{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robbaratta/Desktop/code/projects/rfp/client/components/auth/signup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, Fragment, useEffect } from \"react\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { useRequest } from \"../../hooks/use-request\";\n\nconst Signup = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    userOfSite: \"rfp\",\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    success: false,\n    error: false,\n    msg: \"\",\n    loading: false\n  });\n  const {\n    name,\n    phone,\n    email,\n    password,\n    success,\n    loading,\n    error,\n    msg,\n    userOfSite\n  } = values;\n  const {\n    doRequest,\n    errors\n  } = useRequest({\n    url: `/api/users/signup/${userOfSite}`,\n    // MUST CHANGE\n    method: \"post\",\n    body: {\n      name,\n      email,\n      phone,\n      password\n    }\n  });\n\n  const handleChange = name => e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      msg: \"\",\n      error: false,\n      [name]: e.target.value\n    }));\n  };\n\n  const clickSubmit = async event => {\n    event.preventDefault(); // keep browser from reloading when btn click\n\n    doRequest();\n  };\n\n  const redirectAfterLogin = () => {\n    console.log(\"redirecting..\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    success: success,\n    loading: loading,\n    children: success ? redirectAfterLogin() : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"name\"),\n        value: name,\n        fluid: true,\n        placeholder: \"Name\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"phone\"),\n        value: phone,\n        fluid: true,\n        placeholder: \"Phone\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"email\"),\n        value: email,\n        fluid: true,\n        placeholder: \"Email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"password\"),\n        value: password,\n        fluid: true,\n        placeholder: \"Password\",\n        type: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), errors, /*#__PURE__*/_jsxDEV(Form.Button, {\n        fluid: true,\n        onClick: clickSubmit,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\nexport { Signup };","map":{"version":3,"sources":["/Users/robbaratta/Desktop/code/projects/rfp/client/components/auth/signup.js"],"names":["useState","Fragment","useEffect","Form","Message","axios","useRequest","Signup","values","setValues","userOfSite","name","phone","email","password","success","error","msg","loading","doRequest","errors","url","method","body","handleChange","e","target","value","clickSubmit","event","preventDefault","redirectAfterLogin","console","log"],"mappings":"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","sourcesContent":["import { useState, Fragment, useEffect } from \"react\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { useRequest } from \"../../hooks/use-request\";\n\nconst Signup = () => {\n  const [values, setValues] = useState({\n    userOfSite: \"rfp\",\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    success: false,\n    error: false,\n    msg: \"\",\n    loading: false,\n  });\n\n  const {\n    name,\n    phone,\n    email,\n    password,\n    success,\n    loading,\n    error,\n    msg,\n    userOfSite,\n  } = values;\n\n  const { doRequest, errors } = useRequest({\n    url: `/api/users/signup/${userOfSite}`, // MUST CHANGE\n    method: \"post\",\n    body: {\n      name,\n      email,\n      phone,\n      password,\n    },\n  });\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, msg: \"\", error: false, [name]: e.target.value });\n  };\n\n  const clickSubmit = async (event) => {\n    event.preventDefault(); // keep browser from reloading when btn click\n\n    doRequest();\n  };\n\n  const redirectAfterLogin = () => {\n    console.log(\"redirecting..\");\n  };\n\n  return (\n    <Form success={success} loading={loading}>\n      {success ? (\n        redirectAfterLogin()\n      ) : (\n        <Fragment>\n          <Form.Input\n            onChange={handleChange(\"name\")}\n            value={name}\n            fluid\n            placeholder=\"Name\"\n            type=\"text\"\n          />\n          <Form.Input\n            onChange={handleChange(\"phone\")}\n            value={phone}\n            fluid\n            placeholder=\"Phone\"\n            type=\"text\"\n          />\n          <Form.Input\n            onChange={handleChange(\"email\")}\n            value={email}\n            fluid\n            placeholder=\"Email\"\n            type=\"email\"\n          />\n          <Form.Input\n            onChange={handleChange(\"password\")}\n            value={password}\n            fluid\n            placeholder=\"Password\"\n            type=\"Password\"\n          />\n          {errors}\n          <Form.Button fluid onClick={clickSubmit}>\n            Sign Up\n          </Form.Button>\n        </Fragment>\n      )}\n    </Form>\n  );\n};\n\nexport { Signup };\n"]},"metadata":{},"sourceType":"module"}