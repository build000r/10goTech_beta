{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useState, Fragment } from \"react\";\nimport { Form } from \"semantic-ui-react\";\n\nvar Checkbox = function Checkbox(clickOptions, handleSelected) {\n  var _useState = useState([]),\n      checked = _useState[0],\n      setChecked = _useState[1];\n\n  var handleToggle = function handleToggle(c) {\n    return function () {\n      var currentClickOpt = checked.indexOf(c); //returns first index of which given element is found in array OR returns -1 if not found\n\n      var newClickOpts = _toConsumableArray(checked); // if currenly checked was not already in checked state then -> push, else pull/take off\n\n\n      if (currentClickOpt === -1) {\n        newClickOpts.push(c);\n      } else {\n        newClickOpts.splice(currentClickOpt, 1);\n      }\n\n      setChecked(newClickOpts);\n      handleSelected(newClickOpts);\n    };\n  };\n\n  return clickOptions.map(function (c, i) {\n    return /*#__PURE__*/_jsx(Fragment, {\n      children: /*#__PURE__*/_jsx(Form.Checkbox, {\n        onChange: handleToggle(c),\n        value: checked.indexOf(c === -1),\n        label: c.name\n      })\n    }, i);\n  });\n};\n\nexport default Checkbox;","map":null,"metadata":{},"sourceType":"module"}