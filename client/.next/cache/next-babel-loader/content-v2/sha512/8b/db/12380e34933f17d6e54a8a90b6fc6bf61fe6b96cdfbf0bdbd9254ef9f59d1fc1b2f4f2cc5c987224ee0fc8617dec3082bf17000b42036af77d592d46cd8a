{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robbaratta/Desktop/code/projects/rfp/client/hooks/use-request.js\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { List, Message } from \"semantic-ui-react\";\n\nconst useRequest = ({\n  url,\n  method,\n  body\n}) => {\n  const {\n    0: errors,\n    1: setErrors\n  } = useState(null);\n\n  const doRequest = async () => {\n    try {\n      const response = await axios[method](url, body);\n      return response.data;\n    } catch (err) {\n      setErrors( /*#__PURE__*/_jsxDEV(Message, {\n        negative: true,\n        children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n          children: \"There is a problem with your submission.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          as: \"ul\",\n          children: console.log(err.response)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  return {\n    doRequest,\n    errors\n  };\n};\n\nexport { useRequest };","map":{"version":3,"sources":["/Users/robbaratta/Desktop/code/projects/rfp/client/hooks/use-request.js"],"names":["axios","useState","List","Message","useRequest","url","method","body","errors","setErrors","doRequest","response","data","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,mBAA9B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,MAAP;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AAC5C,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,IAAD,CAApC;;AACA,QAAMS,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACM,MAAD,CAAL,CAAcD,GAAd,EAAmBE,IAAnB,CAAvB;AACA,aAAOI,QAAQ,CAACC,IAAhB;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZJ,MAAAA,SAAS,eACP,QAAC,OAAD;AAAS,QAAA,QAAQ,MAAjB;AAAA,gCACE,QAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,IAAT;AAAA,oBACGK,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACF,QAAhB;AADH;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,CAAT;AAeD;AACF,GArBD;;AAuBA,SAAO;AAAED,IAAAA,SAAF;AAAaF,IAAAA;AAAb,GAAP;AACD,CA1BD;;AA4BA,SAASJ,UAAT","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { List, Message } from \"semantic-ui-react\";\n\nconst useRequest = ({ url, method, body }) => {\n  const [errors, setErrors] = useState(null);\n  const doRequest = async () => {\n    try {\n      const response = await axios[method](url, body);\n      return response.data;\n    } catch (err) {\n      setErrors(\n        <Message negative>\n          <Message.Header>\n            There is a problem with your submission.\n          </Message.Header>\n          <List as=\"ul\">\n            {console.log(err.response)}\n            {/* {err.response.data.error.map((e) => (\n              <List.Item as=\"li\" key={e.message}>\n                {e.message}\n              </List.Item>\n            ))} */}\n          </List>\n        </Message>\n      );\n    }\n  };\n\n  return { doRequest, errors };\n};\n\nexport { useRequest };\n"]},"metadata":{},"sourceType":"module"}