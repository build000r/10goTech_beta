{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from \"react\";\nimport { Card, Segment, Form, Input, TextArea, Button } from \"semantic-ui-react\";\nimport { useRequest } from \"../../hooks/use-request\";\nimport Router from \"next/router\";\nimport DeleteProduct from \"../admin-site/delete-product\";\n\nvar AddUpdateProduct = function AddUpdateProduct(_ref) {\n  var product = _ref.product,\n      site = _ref.site;\n\n  var _useState = useState({\n    updateExisting: true,\n    productId: \"\",\n    title: \"\",\n    brief: \"\",\n    description: \"\",\n    homepagePosition: \"\",\n    clickOptions: [{\n      name: \"\"\n    }],\n    error: \"\",\n    loading: false,\n    createdProduct: \"\",\n    redirectToProfile: false,\n    emailSubject: \"\",\n    emailBody: \"\",\n    slug: \"\",\n    customerNote: \"\"\n  }),\n      values = _useState[0],\n      setValues = _useState[1]; // on save create a slug.. lower case & dashes\n  // modify state for updating vs creating\n\n\n  var _useRequest = useRequest({\n    url: !product ? \"/api/product/\".concat(site) : \"/api/product/\".concat(site, \"/\").concat(values.slug),\n    // MUST CHANGE\n    method: !product ? \"post\" : \"put\",\n    body: {\n      title: values.title,\n      description: values.description,\n      brief: values.brief,\n      clickOptions: values.clickOptions.length > 0 ? values.clickOptions : [{\n        name: \"\"\n      }],\n      customerNote: values.customerNote\n    },\n    onSuccess: function onSuccess() {\n      return Router.push(\"/user/\".concat(site, \"/services\"));\n    }\n  }),\n      doRequest = _useRequest.doRequest,\n      errors = _useRequest.errors;\n\n  useEffect(function () {\n    if (product) {\n      var title = product.title,\n          brief = product.brief,\n          description = product.description,\n          slug = product.slug,\n          clickOptions = product.clickOptions,\n          customerNote = product.customerNote;\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        updateExisting: true,\n        title: title,\n        slug: slug,\n        brief: brief,\n        description: description,\n        clickOptions: clickOptions,\n        customerNote: customerNote\n      }));\n    }\n  }, []);\n\n  var handleChange = function handleChange(name) {\n    return function (evt) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, evt.target.value)));\n    };\n  };\n\n  var handleClickOptionsChange = function handleClickOptionsChange(idx) {\n    return function (evt) {\n      var newClickOptions = values.clickOptions.map(function (o, sidx) {\n        if (idx !== sidx) return o;\n        return _objectSpread(_objectSpread({}, o), {}, {\n          name: evt.target.value\n        });\n      });\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        clickOptions: newClickOptions\n      }));\n    };\n  };\n\n  var handleAddClickOption = function handleAddClickOption() {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      clickOptions: values.clickOptions.concat([{\n        name: \"\"\n      }])\n    }));\n  };\n\n  var handleRemoveClickOption = function handleRemoveClickOption(idx) {\n    return function () {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        clickOptions: values.clickOptions.filter(function (s, sidx) {\n          return idx !== sidx;\n        })\n      }));\n    };\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              evt.preventDefault();\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: true\n              }));\n              _context.next = 4;\n              return doRequest();\n\n            case 4:\n              res = _context.sent;\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: false\n              }));\n              console.log(res);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var formCard = function formCard() {\n    var title = values.title,\n        brief = values.brief,\n        description = values.description,\n        clickOptions = values.clickOptions,\n        loading = values.loading,\n        emailBody = values.emailBody,\n        emailSubject = values.emailSubject,\n        customerNote = values.customerNote;\n    return /*#__PURE__*/_jsxs(Card, {\n      fluid: true,\n      children: [product ? /*#__PURE__*/_jsx(DeleteProduct, {\n        siteTitle: site,\n        productTitle: values.title\n      }) : null, /*#__PURE__*/_jsx(Card.Content, {\n        children: /*#__PURE__*/_jsxs(Form, {\n          loading: loading,\n          children: [/*#__PURE__*/_jsxs(Form.Field, {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"Title\"\n            }), /*#__PURE__*/_jsx(Input, {\n              placeholder: \"title\",\n              onChange: handleChange(\"title\"),\n              className: \"form-control\",\n              value: title\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Field, {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"Brief Description\"\n            }), /*#__PURE__*/_jsx(Input, {\n              placeholder: \"brief\",\n              onChange: handleChange(\"brief\"),\n              className: \"form-control\",\n              value: brief\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Field, {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"Longer Description\"\n            }), /*#__PURE__*/_jsx(TextArea, {\n              placeholder: \"description\",\n              onChange: handleChange(\"description\"),\n              className: \"form-control\",\n              value: description\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Field, {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"Custom Note Instructions\"\n            }), /*#__PURE__*/_jsx(TextArea, {\n              placeholder: \"Describe additional information you'd like to receive from the customer ordering this service.\",\n              onChange: handleChange(\"customerNote\"),\n              className: \"form-control\",\n              value: customerNote\n            })]\n          }), clickOptions.map(function (o, idx) {\n            return /*#__PURE__*/_jsxs(Form.Field, {\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                children: \"Checkbox Option\"\n              }), /*#__PURE__*/_jsx(TextArea, {\n                fluid: true,\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"Type checkbox option \".concat(idx + 1),\n                value: o.name,\n                onChange: handleClickOptionsChange(idx)\n              }), /*#__PURE__*/_jsx(Button, {\n                size: \"mini\",\n                color: \"red\",\n                floated: \"right\",\n                type: \"button\",\n                onClick: handleRemoveClickOption(idx),\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  children: \"-\"\n                })\n              })]\n            });\n          }), /*#__PURE__*/_jsx(Button, {\n            size: \"mini\",\n            color: \"green\",\n            onClick: handleAddClickOption,\n            className: \"small\",\n            children: \"Add Clickable Option\"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Button, {\n        type: \"submit\",\n        fluid: true,\n        onClick: handleSubmit,\n        children: product ? \"Update\" : \"Create\"\n      })]\n    });\n  };\n\n  return /*#__PURE__*/_jsx(Segment, {\n    children: formCard()\n  });\n};\n\nexport default AddUpdateProduct;","map":null,"metadata":{},"sourceType":"module"}