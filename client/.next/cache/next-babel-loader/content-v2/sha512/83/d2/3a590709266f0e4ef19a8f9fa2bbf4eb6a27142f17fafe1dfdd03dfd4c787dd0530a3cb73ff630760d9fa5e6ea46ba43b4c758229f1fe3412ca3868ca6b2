{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/regenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { List, Message } from \"semantic-ui-react\";\n\nvar useRequest = function useRequest(_ref) {\n  var url = _ref.url,\n      method = _ref.method,\n      body = _ref.body,\n      onSuccess = _ref.onSuccess;\n\n  var _useState = useState(null),\n      errors = _useState[0],\n      setErrors = _useState[1];\n\n  var _useState2 = useState(null),\n      errMsgArr = _useState2[0],\n      setErrMsgArr = _useState2[1];\n\n  var doRequest = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var props,\n          response,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              props = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.prev = 1;\n              setErrors(null);\n              _context.next = 5;\n              return axios[method](url, _objectSpread(_objectSpread({}, body), props));\n\n            case 5:\n              response = _context.sent;\n\n              if (onSuccess) {\n                onSuccess(response.data);\n              }\n\n              return _context.abrupt(\"return\", response.data);\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(\" did you import Router from next/router?\", _context.t0);\n              setErrors( /*#__PURE__*/_jsxs(Message, {\n                negative: true,\n                children: [/*#__PURE__*/_jsx(Message.Header, {\n                  children: \"There is a problem with the form submission.\"\n                }), /*#__PURE__*/_jsx(List, {\n                  as: \"ul\",\n                  children: _context.t0.response.data.errors.map(function (e) {\n                    return /*#__PURE__*/_jsx(List.Item, {\n                      as: \"li\",\n                      children: e.message\n                    }, e.message);\n                  })\n                })]\n              }));\n              setErrMsgArr(_context.t0.response.data.errors.map(function (e) {\n                return e.message;\n              }));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function doRequest() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return {\n    doRequest: doRequest,\n    errors: errors,\n    errMsgArr: errMsgArr\n  };\n};\n\nexport { useRequest };","map":null,"metadata":{},"sourceType":"module"}