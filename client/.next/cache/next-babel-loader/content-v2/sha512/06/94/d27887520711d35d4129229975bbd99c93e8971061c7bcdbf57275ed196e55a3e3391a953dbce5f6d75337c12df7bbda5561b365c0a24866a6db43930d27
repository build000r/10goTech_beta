{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Fragment } from \"react\";\nimport { Image, Button, Label, Icon, Segment, Pagination, Container } from \"semantic-ui-react\";\nimport DeleteImage from \"./DeleteImage\";\n\nconst Slideshow = ({\n  productId\n}) => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    active: 1,\n    photos: undefined\n  });\n  useEffect(async () => {\n    const {\n      data\n    } = await axios.get(`/api/photos/${productId}`);\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      photos: data\n    }));\n  }, []);\n  const {\n    active,\n    photos\n  } = values;\n  console.log(photos);\n\n  const arrayBufferToBase64 = buffer => {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach(b => binary += String.fromCharCode(b));\n    return btoa(binary);\n  };\n\n  const base64Flag = \"data:image/jpeg;base64,\";\n\n  const next = () => {\n    let showIndex = active + 1;\n    showIndex = showIndex > photos.length ? 1 : showIndex;\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      active: showIndex\n    }));\n  };\n\n  const prev = () => {\n    let showIndex = active - 1;\n    showIndex = showIndex === 0 ? photos.length : showIndex;\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      active: showIndex\n    }));\n  };\n\n  const changePhoto = e => {\n    e.preventDefault();\n\n    if (e.target.outerText === \"⟩\") {\n      return next();\n    }\n\n    if (e.target.outerText === \"⟨\") {\n      return prev();\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      active: e.target.outerText / 1\n    }));\n  };\n\n  const renderPhotoSlideShow = () => {\n    return /*#__PURE__*/_jsxs(Segment, {\n      basic: true,\n      textAlign: \"center\",\n      children: [photos.map((p, i) => {\n        const {\n          photo,\n          caption\n        } = p;\n        const img = base64Flag + arrayBufferToBase64(photo.data);\n        return i + 1 === active ? /*#__PURE__*/_jsx(Fragment, {\n          children: /*#__PURE__*/_jsx(Image, {\n            src: img,\n            fluid: true,\n            onClick: next\n          })\n        }) : null;\n      }), /*#__PURE__*/_jsx(Pagination, {\n        onPageChange: changePhoto,\n        activePage: active,\n        boundaryRange: 0,\n        siblingRange: 1,\n        ellipsisItem: null,\n        firstItem: null,\n        lastItem: null,\n        totalPages: photos.length\n      })]\n    });\n  };\n\n  return photos !== undefined && photos.length > 0 ? renderPhotoSlideShow() : null;\n};\n\nexport default Slideshow;","map":null,"metadata":{},"sourceType":"module"}