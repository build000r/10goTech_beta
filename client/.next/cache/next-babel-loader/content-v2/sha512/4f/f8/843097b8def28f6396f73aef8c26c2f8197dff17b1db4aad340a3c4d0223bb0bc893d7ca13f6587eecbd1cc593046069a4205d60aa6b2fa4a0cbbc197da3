{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { buildClient } from \"../api/build-client\";\nimport { useSiteType } from \"./use-site-type\";\n\nvar checkExistenceOfSite = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref2 = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var context, _yield$buildClient$ge, site, siteExists;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            context = _ref.context;\n            _context.prev = 2;\n            _context.next = 5;\n            return buildClient(context).get(\"/api/site/\".concat(context.query.site));\n\n          case 5:\n            _yield$buildClient$ge = _context.sent;\n            site = _yield$buildClient$ge.data;\n            siteExists = useSiteType({\n              siteExists: true,\n              ownerId: site.ownerId,\n              path: context.pathname\n            });\n            return _context.abrupt(\"return\", {\n              siteExists: siteExists,\n              siteInfo: site\n            });\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", {\n              siteExists: false,\n              siteInfo: null\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 11]]);\n  }), \"rlmR8/q3z9w/SfCZHkbDa/Tc7IQ=\", false, function () {\n    return [useSiteType];\n  }));\n\n  return function checkExistenceOfSite(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport { checkExistenceOfSite };","map":{"version":3,"sources":["/Users/rjb/Desktop/code/projects/rfp/client/hooks/use-site-existence.js"],"names":["buildClient","useSiteType","checkExistenceOfSite","context","get","query","site","data","siteExists","ownerId","path","pathname","siteInfo"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,qBAA5B;AACA,SAASC,WAAT,QAA4B,iBAA5B;;AAEA,IAAMC,oBAAoB;AAAA;;AAAA,0EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAASC,YAAAA,OAAT,QAASA,OAAT;AAAA;AAAA;AAAA,mBAEIH,WAAW,CAACG,OAAD,CAAX,CAAqBC,GAArB,qBACdD,OAAO,CAACE,KAAR,CAAcC,IADA,EAFJ;;AAAA;AAAA;AAEXA,YAAAA,IAFW,yBAEjBC,IAFiB;AAMnBC,YAAAA,UANmB,GAMNP,WAAW,CAAC;AAC7BO,cAAAA,UAAU,EAAE,IADiB;AAE7BC,cAAAA,OAAO,EAAEH,IAAI,CAACG,OAFe;AAG7BC,cAAAA,IAAI,EAAEP,OAAO,CAACQ;AAHe,aAAD,CANL;AAAA,6CAYlB;AAAEH,cAAAA,UAAU,EAAVA,UAAF;AAAcI,cAAAA,QAAQ,EAAEN;AAAxB,aAZkB;;AAAA;AAAA;AAAA;AAAA,6CAclB;AAAEE,cAAAA,UAAU,EAAE,KAAd;AAAqBI,cAAAA,QAAQ,EAAE;AAA/B,aAdkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,YAMHX,WANG;AAAA;;AAAA,kBAApBC,oBAAoB;AAAA;AAAA;AAAA,GAA1B;;AAkBA,SAASA,oBAAT","sourcesContent":["import { buildClient } from \"../api/build-client\";\nimport { useSiteType } from \"./use-site-type\";\n\nconst checkExistenceOfSite = async ({ context }) => {\n  try {\n    const { data: site } = await buildClient(context).get(\n      `/api/site/${context.query.site}`\n    );\n\n    const siteExists = useSiteType({\n      siteExists: true,\n      ownerId: site.ownerId,\n      path: context.pathname,\n    });\n\n    return { siteExists, siteInfo: site };\n  } catch (error) {\n    return { siteExists: false, siteInfo: null };\n  }\n};\n\nexport { checkExistenceOfSite };\n"]},"metadata":{},"sourceType":"module"}