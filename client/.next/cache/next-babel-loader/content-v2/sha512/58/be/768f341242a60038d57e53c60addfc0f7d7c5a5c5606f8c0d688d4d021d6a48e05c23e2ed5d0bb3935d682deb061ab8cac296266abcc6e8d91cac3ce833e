{"ast":null,"code":"import { useState, useCallback, useEffect } from \"react\";\n\nconst useMediaQuery = width => {\n  const {\n    0: targetReached,\n    1: setTargetReached\n  } = useState(false);\n  const updateTarget = useCallback(e => {\n    if (e.matches) {\n      setTargetReached(true);\n    } else {\n      setTargetReached(false);\n    }\n  }, []);\n  useEffect(() => {\n    const media = window.matchMedia(`(max-width: ${width}px)`);\n    media.addListener(updateTarget); // Check on mount (callback is not called until a change occurs)\n\n    if (media.matches) {\n      setTargetReached(true);\n    }\n\n    return () => media.removeListener(updateTarget);\n  }, []);\n  return targetReached;\n};\n\nexport { useMediaQuery };","map":{"version":3,"sources":["/Users/rjb/Desktop/code/projects/rfp/client/hooks/use-media-query.js"],"names":["useState","useCallback","useEffect","useMediaQuery","width","targetReached","setTargetReached","updateTarget","e","matches","media","window","matchMedia","addListener","removeListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCN,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMO,YAAY,GAAGN,WAAW,CAAEO,CAAD,IAAO;AACtC,QAAIA,CAAC,CAACC,OAAN,EAAe;AACbH,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAFD,MAEO;AACLA,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAN+B,EAM7B,EAN6B,CAAhC;AAQAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAGC,MAAM,CAACC,UAAP,CAAmB,eAAcR,KAAM,KAAvC,CAAd;AACAM,IAAAA,KAAK,CAACG,WAAN,CAAkBN,YAAlB,EAFc,CAId;;AACA,QAAIG,KAAK,CAACD,OAAV,EAAmB;AACjBH,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;;AAED,WAAO,MAAMI,KAAK,CAACI,cAAN,CAAqBP,YAArB,CAAb;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAOF,aAAP;AACD,CAxBD;;AA0BA,SAASF,aAAT","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\n\nconst useMediaQuery = (width) => {\n  const [targetReached, setTargetReached] = useState(false);\n\n  const updateTarget = useCallback((e) => {\n    if (e.matches) {\n      setTargetReached(true);\n    } else {\n      setTargetReached(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const media = window.matchMedia(`(max-width: ${width}px)`);\n    media.addListener(updateTarget);\n\n    // Check on mount (callback is not called until a change occurs)\n    if (media.matches) {\n      setTargetReached(true);\n    }\n\n    return () => media.removeListener(updateTarget);\n  }, []);\n\n  return targetReached;\n};\n\nexport { useMediaQuery };\n"]},"metadata":{},"sourceType":"module"}