{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { buildClient } from \"../../../../../api/build-client\";\nimport ViewPhotos from \"../../../../../components/user-site/ViewPhotos\";\nimport { useRouter } from \"next/router\";\nimport UploadImage from \"../../../../../components/util/UploadImage\";\nimport Layout from \"../../../../../components/layouts\";\n\nvar Photo = function Photo(_ref) {\n  var ownerId = _ref.ownerId,\n      productId = _ref.productId,\n      photos = _ref.photos;\n  return /*#__PURE__*/_jsxs(Layout, {\n    smallLeaderboard: true,\n    leaderboardData: {\n      header: \"Upload an Image\",\n      subHeader: \"\"\n    },\n    children: [/*#__PURE__*/_jsx(UploadImage, {\n      productId: productId,\n      path: useRouter().asPath,\n      ownerId: ownerId\n    }), /*#__PURE__*/_jsx(ViewPhotos, {\n      photos: photos\n    })]\n  });\n};\n\nPhoto.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _yield$buildClient$ge, product, _yield$buildClient$ge2, photos;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return buildClient(context).get(\"/api/product/\".concat(context.query.site, \"/\").concat(context.query.service));\n\n          case 2:\n            _yield$buildClient$ge = _context.sent;\n            product = _yield$buildClient$ge.data;\n            // photos by product id\n            console.log(\"/api/photos/\".concat(product.id));\n            _context.next = 7;\n            return buildClient(context).get(\"/api/photos/\".concat(product.id));\n\n          case 7:\n            _yield$buildClient$ge2 = _context.sent;\n            photos = _yield$buildClient$ge2.data;\n            return _context.abrupt(\"return\", {\n              ownerId: product.site.ownerId,\n              productId: product.id,\n              photos: photos\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Photo;","map":null,"metadata":{},"sourceType":"module"}