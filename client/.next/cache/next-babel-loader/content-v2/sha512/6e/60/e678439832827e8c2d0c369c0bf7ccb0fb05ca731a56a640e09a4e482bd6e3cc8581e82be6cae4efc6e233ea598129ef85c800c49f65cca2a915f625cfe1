{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { buildClient } from \"../../../../api/build-client\";\nimport Layout from \"../../../../components/layouts\";\nimport CheckoutCard from \"../../../../components/user-site/CheckoutCard\";\n\nvar services = function services(_ref) {\n  var product = _ref.product,\n      isAdmin = _ref.isAdmin;\n  return /*#__PURE__*/_jsx(Layout, {\n    smallLeaderboard: true,\n    leaderboardData: {\n      header: product.title,\n      subHeader: product.brief,\n      dividerText: \"Details\"\n    },\n    children: /*#__PURE__*/_jsx(CheckoutCard, {\n      product: product,\n      isAdmin: isAdmin\n    })\n  });\n};\n\nservices.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _yield$buildClient$ge, product, _yield$buildClient$ge2, currentUser, user, _yield$buildClient$ge3, site, isAdmin;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return buildClient(context).get(\"/api/product/\".concat(context.query.site, \"/\").concat(context.query.service));\n\n          case 2:\n            _yield$buildClient$ge = _context.sent;\n            product = _yield$buildClient$ge.data;\n            _context.next = 6;\n            return buildClient(context).get(\"/api/users/currentuser\");\n\n          case 6:\n            _yield$buildClient$ge2 = _context.sent;\n            currentUser = _yield$buildClient$ge2.data;\n            user = currentUser.currentUser;\n            _context.next = 11;\n            return buildClient(context).get(\"/api/site/\".concat(context.query.site));\n\n          case 11:\n            _yield$buildClient$ge3 = _context.sent;\n            site = _yield$buildClient$ge3.data;\n\n            if (user) {\n              isAdmin = site.ownerId === user.id;\n            } else {\n              isAdmin = false;\n            }\n\n            return _context.abrupt(\"return\", {\n              product: product,\n              isAdmin: isAdmin\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default services;","map":null,"metadata":{},"sourceType":"module"}