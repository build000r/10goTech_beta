{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { Button, Form, Card } from \"semantic-ui-react\";\nimport { useState } from \"react\";\nimport Router, { useRouter } from \"next/router\";\nimport { useRequest } from \"../../hooks/use-request\";\n\nvar CheckoutForm = function CheckoutForm(_ref) {\n  var packageId = _ref.packageId;\n  var site = useRouter().query.site;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var subscribeRequest = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(paymentMethod) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post(\"/api/site-subscription/subscribe\", {\n                packageId: packageId,\n                paymentMethod: paymentMethod\n              });\n\n            case 2:\n              res = _context.sent;\n              res.data.subscription.id;\n              return _context.abrupt(\"return\", res.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function subscribeRequest(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var cardElement, _yield$stripe$createP, error, paymentMethod;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // Block native form submission.\n              event.preventDefault();\n\n              if (!(!stripe || !elements)) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              // Get a reference to a mounted CardElement. Elements knows how\n              // to find your CardElement because there can only ever be one of\n              // each type of element.\n              cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n              _context2.next = 6;\n              return stripe.createPaymentMethod({\n                type: \"card\",\n                card: cardElement\n              });\n\n            case 6:\n              _yield$stripe$createP = _context2.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n\n              if (!error) {\n                _context2.next = 13;\n                break;\n              }\n\n              console.log(\"[error]\", error);\n              _context2.next = 17;\n              break;\n\n            case 13:\n              setLoading(true);\n              _context2.next = 16;\n              return subscribeRequest(paymentMethod);\n\n            case 16:\n              Router.push(\"/admin/\".concat(site, \"/account/sites\"));\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmit(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(Card, {\n    centered: true,\n    fluid: true,\n    children: /*#__PURE__*/_jsx(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxs(Card.Content, {\n        children: [/*#__PURE__*/_jsx(CardElement, {\n          style: {\n            padding: \"10px\",\n            margin: \"10px\"\n          },\n          options: {\n            style: {\n              base: {\n                fontSize: \"16px\",\n                color: \"#424770\",\n                \"::placeholder\": {\n                  color: \"#aab7c4\"\n                }\n              },\n              invalid: {\n                color: \"#9e2146\"\n              }\n            }\n          }\n        }), /*#__PURE__*/_jsx(Button, {\n          attached: \"bottom\",\n          fluid: true,\n          color: \"linkedin\",\n          type: \"submit\",\n          disabled: !stripe,\n          style: {\n            marginTop: \"10px\"\n          },\n          onClick: handleSubmit,\n          loading: loading,\n          children: \"Pay\"\n        })]\n      })\n    })\n  });\n};\n\nexport { CheckoutForm };","map":null,"metadata":{},"sourceType":"module"}