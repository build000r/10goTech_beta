{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rjb/Desktop/code/projects/rfp/client/components/auth/signup-basic.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, Fragment, useEffect } from \"react\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport { useRequest } from \"../../hooks/use-request\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\n\nconst Signup = ({\n  createSitePermission\n}) => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    email: \"\",\n    password: \"\",\n    success: false,\n    loading: false,\n    agreeTos: false\n  });\n  const {\n    email,\n    password,\n    success,\n    loading,\n    agreeTos\n  } = values;\n  const {\n    doRequest,\n    errors\n  } = useRequest({\n    url: `/api/users/signup/${useRouter().query.site}`,\n    // MUST CHANGE\n    method: \"post\",\n    body: {\n      email,\n      password,\n      createSitePermission\n    }\n  });\n\n  const handleChange = name => e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: e.target.value\n    }));\n  };\n\n  const clickSubmit = async event => {\n    event.preventDefault(); // keep browser from reloading when btn click\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    const response = await doRequest();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: false\n    }));\n\n    if (response && response.token) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        success: true\n      }));\n    }\n  };\n\n  return success ? /*#__PURE__*/_jsxDEV(Message, {\n    success: true,\n    header: `Activation email sent to ${email}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Form, {\n    loading: loading,\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"email\"),\n        value: email,\n        fluid: true,\n        placeholder: \"Email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"password\"),\n        value: password,\n        fluid: true,\n        placeholder: \"Password\",\n        type: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Checkbox, {\n        label: \"I agree to the Terms and Conditions\",\n        onChange: () => setValues(_objectSpread(_objectSpread({}, values), {}, {\n          agreeTos: !agreeTos\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), errors, /*#__PURE__*/_jsxDEV(Form.Button, {\n        color: \"linkedin\",\n        disabled: !agreeTos,\n        fluid: true,\n        onClick: clickSubmit,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: [\"We will not share your information with 3rd parties. Upon signup, you will receive an email to activate your account. For additional information, please review our\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/admin/rfp/tos\",\n          children: \"Terms and Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\nexport { Signup };","map":{"version":3,"sources":["/Users/rjb/Desktop/code/projects/rfp/client/components/auth/signup-basic.js"],"names":["useState","Fragment","useEffect","Form","Message","useRequest","useRouter","Link","Signup","createSitePermission","values","setValues","email","password","success","loading","agreeTos","doRequest","errors","url","query","site","method","body","handleChange","name","e","target","value","clickSubmit","event","preventDefault","response","token"],"mappings":"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","sourcesContent":["import { useState, Fragment, useEffect } from \"react\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport { useRequest } from \"../../hooks/use-request\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\n\nconst Signup = ({ createSitePermission }) => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    success: false,\n    loading: false,\n    agreeTos: false,\n  });\n\n  const { email, password, success, loading, agreeTos } = values;\n\n  const { doRequest, errors } = useRequest({\n    url: `/api/users/signup/${useRouter().query.site}`, // MUST CHANGE\n    method: \"post\",\n    body: {\n      email,\n      password,\n      createSitePermission,\n    },\n  });\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const clickSubmit = async (event) => {\n    event.preventDefault(); // keep browser from reloading when btn click\n\n    setValues({ ...values, loading: true });\n\n    const response = await doRequest();\n\n    setValues({ ...values, loading: false });\n\n    if (response && response.token) {\n      setValues({ ...values, success: true });\n    }\n  };\n\n  return success ? (\n    <Message success header={`Activation email sent to ${email}`} />\n  ) : (\n    <Form loading={loading}>\n      <Fragment>\n        <Form.Input\n          onChange={handleChange(\"email\")}\n          value={email}\n          fluid\n          placeholder=\"Email\"\n          type=\"email\"\n        />\n        <Form.Input\n          onChange={handleChange(\"password\")}\n          value={password}\n          fluid\n          placeholder=\"Password\"\n          type=\"Password\"\n        />\n        <Form.Checkbox\n          label=\"I agree to the Terms and Conditions\"\n          onChange={() => setValues({ ...values, agreeTos: !agreeTos })}\n        />\n\n        {errors}\n        <Form.Button\n          color=\"linkedin\"\n          disabled={!agreeTos}\n          fluid\n          onClick={clickSubmit}\n        >\n          Sign Up\n        </Form.Button>\n        <Message>\n          We will not share your information with 3rd parties. Upon signup, you\n          will receive an email to activate your account. For additional\n          information, please review our{\" \"}\n          <Link href=\"/admin/rfp/tos\">Terms and Conditions</Link>.\n        </Message>\n      </Fragment>\n    </Form>\n  );\n};\n\nexport { Signup };\n"]},"metadata":{},"sourceType":"module"}