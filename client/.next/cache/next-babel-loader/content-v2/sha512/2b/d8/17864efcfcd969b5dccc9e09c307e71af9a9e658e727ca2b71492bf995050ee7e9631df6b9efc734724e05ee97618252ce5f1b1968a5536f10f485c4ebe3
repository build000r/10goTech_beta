{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Item, Button, Label, Icon, Popup, Card, Header, List } from \"semantic-ui-react\";\nimport { useRequest } from \"../../hooks/use-request\";\nimport Router from \"next/router\";\nimport { UpdatePaymentPerSubscription } from \"../payment/UpdatePaymentPerSubscription\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nvar stripePromise = loadStripe(\"pk_test_51HcBP1AbNtIO9WIz2YyuWzAj9jjcgkBW4m1CFzKTMa3F80USq2ic8Hg5BNBFQdV5CCSw8voWoMXZCGxw2RNLVulQ001jMUK3UP\");\n\nvar CurrentSubscription = function CurrentSubscription(_ref) {\n  var subscription = _ref.subscription,\n      site = _ref.site,\n      userOfSite = _ref.userOfSite,\n      pay = _ref.pay;\n\n  var _useRequest = useRequest({\n    url: \"/api/site/\".concat(site),\n    method: \"delete\",\n    onSuccess: function onSuccess() {\n      return Router.push(\"/admin/\".concat(userOfSite, \"/account/sites\"));\n    }\n  }),\n      doRequest = _useRequest.doRequest,\n      errors = _useRequest.errors;\n\n  var deleteSiteSubscription = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return doRequest();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function deleteSiteSubscription() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var showSubscription = function showSubscription() {\n    var plan = subscription.plan,\n        id = subscription.id,\n        status = subscription.status,\n        trial_end = subscription.trial_end,\n        current_period_end = subscription.current_period_end;\n    var _pay$card = pay.card,\n        last4 = _pay$card.last4,\n        exp_year = _pay$card.exp_year,\n        exp_month = _pay$card.exp_month,\n        brand = _pay$card.brand;\n    var amount = plan.amount,\n        interval = plan.interval;\n    var trialEnd = new Date(trial_end * 1000);\n    var now = new Date();\n\n    var getReadableDate = function getReadableDate(date) {\n      return \"\".concat(date.getMonth() + 1, \"/\").concat(date.getDate(), \"/\").concat(date.getFullYear());\n    };\n\n    var trialEndDate = getReadableDate(trialEnd);\n    var nextBill = new Date(current_period_end * 1000);\n    var nextBillDate = getReadableDate(nextBill);\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsxs(Item.Group, {\n        children: [/*#__PURE__*/_jsx(Item, {\n          children: /*#__PURE__*/_jsx(Item.Content, {\n            children: /*#__PURE__*/_jsxs(Item.Header, {\n              as: \"a\",\n              children: [\" \", \"$\", amount / 100, \" per \", interval]\n            })\n          })\n        }), /*#__PURE__*/_jsx(Item, {\n          children: /*#__PURE__*/_jsx(Elements, {\n            stripe: stripePromise,\n            children: /*#__PURE__*/_jsx(UpdatePaymentPerSubscription, {\n              subscription: subscription\n            })\n          })\n        }), /*#__PURE__*/_jsx(Item, {\n          children: /*#__PURE__*/_jsxs(Item.Content, {\n            children: [/*#__PURE__*/_jsxs(Item.Header, {\n              children: [brand.charAt(0).toUpperCase() + brand.slice(1), \" On File\"]\n            }), /*#__PURE__*/_jsxs(Item.Meta, {\n              children: [/*#__PURE__*/_jsx(Icon, {\n                name: \"credit card outline\"\n              }), \" \", last4, \" expires \", exp_month, \"/\", exp_year]\n            }), /*#__PURE__*/_jsx(Item.Extra, {\n              children: /*#__PURE__*/_jsxs(Label, {\n                children: [\"Next Bill \", nextBillDate]\n              })\n            }), /*#__PURE__*/_jsxs(Item.Extra, {\n              children: [/*#__PURE__*/_jsx(Popup, {\n                trigger: /*#__PURE__*/_jsx(Button, {\n                  color: \"red\",\n                  icon: \"delete\",\n                  content: \"Cancel Subscription And Delete Site\"\n                }),\n                content: /*#__PURE__*/_jsxs(Card, {\n                  children: [/*#__PURE__*/_jsxs(Card.Content, {\n                    children: [/*#__PURE__*/_jsx(Card.Header, {\n                      children: /*#__PURE__*/_jsx(Header, {\n                        children: \"Are you sure?\"\n                      })\n                    }), /*#__PURE__*/_jsxs(List, {\n                      bulleted: true,\n                      children: [/*#__PURE__*/_jsx(List.Item, {\n                        children: \"This is an irreversible action.\"\n                      }), /*#__PURE__*/_jsx(List.Item, {\n                        children: \"All data associated with the site will be deleted immediately, and cannot be recovered.\"\n                      }), /*#__PURE__*/_jsx(List.Item, {\n                        children: \"You will not be charged again on your next billing date.\"\n                      })]\n                    })]\n                  }), /*#__PURE__*/_jsx(Button, {\n                    size: \"tiny\",\n                    attached: \"bottom\",\n                    negative: true,\n                    onClick: deleteSiteSubscription,\n                    children: \"Yes - Cancel my subscription\"\n                  })]\n                }),\n                on: \"click\",\n                position: \"top right\"\n              }), trialEnd > now ? /*#__PURE__*/_jsxs(Label, {\n                children: [\"Free trial expires \", trialEndDate]\n              }) : null]\n            })]\n          })\n        })]\n      }), errors ? errors : null]\n    });\n  };\n\n  return subscription ? showSubscription() : /*#__PURE__*/_jsx(\"div\", {\n    children: \"no subscription found\"\n  });\n};\n\nexport { CurrentSubscription };","map":null,"metadata":{},"sourceType":"module"}