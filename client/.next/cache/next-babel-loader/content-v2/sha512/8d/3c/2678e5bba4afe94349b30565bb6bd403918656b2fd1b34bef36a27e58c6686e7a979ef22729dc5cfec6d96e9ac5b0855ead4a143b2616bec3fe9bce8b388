{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport { useRouter } from \"next/router\";\nimport { Footer } from \"../components/nav/Footer\";\nimport { SiteHeader } from \"../components/nav/SiteHeader\";\nimport { AdminHeader } from \"../components/nav/AdminHeader\";\nimport { buildClient } from \"../api/build-client\";\nimport { checkExistenceOfSite } from \"../hooks/use-site-existence\";\nimport NoSite from \"../components/error/site-does-not-exist\";\nimport { useEffect } from \"react\";\nimport * as gtag from \"../components/util/gtag\";\nimport Layout from \"../components/layouts\";\n\nfunction AppComponent(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      user = _ref.user,\n      siteExists = _ref.siteExists,\n      authUserIsAdmin = _ref.authUserIsAdmin;\n  var router = useRouter();\n  var isAdmin = router.pathname.includes(\"/admin/[site]\");\n  useEffect(function () {\n    var handleRouteChange = function handleRouteChange(url) {\n      gtag.pageview(url);\n    };\n\n    router.events.on(\"routeChangeComplete\", handleRouteChange);\n    return function () {\n      router.events.off(\"routeChangeComplete\", handleRouteChange);\n    };\n  }, [router.events]);\n\n  var renderHeader = function renderHeader() {\n    return isAdmin ? /*#__PURE__*/_jsx(AdminHeader, {\n      user: user,\n      siteExists: siteExists\n    }) : /*#__PURE__*/_jsx(SiteHeader, {\n      user: user,\n      siteExists: siteExists,\n      authUserIsAdmin: authUserIsAdmin\n    });\n  };\n\n  var renderComponent = function renderComponent() {\n    return /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps));\n  };\n\n  var layout = function layout() {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [renderHeader(), /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps)), /*#__PURE__*/_jsx(Footer, {\n        siteType: isAdmin ? \"admin\" : \"user\"\n      })]\n    });\n  }; // mon 8:42 change\n  // return <Layout layout={layout()} children={layout}></Layout>;\n\n\n  return layout(); // return siteExists ? layout() : <NoSite />;\n}\n\nAppComponent.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var _yield$checkExistence, siteExists, siteInfo, client, _yield$client$get, currentUser, user, pageProps, authUserIsAdmin, domainUrl;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return checkExistenceOfSite({\n              context: appContext.ctx\n            });\n\n          case 2:\n            _yield$checkExistence = _context.sent;\n            siteExists = _yield$checkExistence.siteExists;\n            siteInfo = _yield$checkExistence.siteInfo;\n\n            if (siteExists) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              siteExists: siteExists\n            });\n\n          case 7:\n            client = buildClient(appContext.ctx);\n            _context.next = 10;\n            return client.get(\"/api/users/currentuser\");\n\n          case 10:\n            _yield$client$get = _context.sent;\n            currentUser = _yield$client$get.data;\n            user = currentUser.currentUser;\n            pageProps = {};\n\n            if (!appContext.Component.getInitialProps) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 17;\n            return appContext.Component.getInitialProps(appContext.ctx);\n\n          case 17:\n            pageProps = _context.sent;\n\n          case 18:\n            authUserIsAdmin = user && user.id === siteInfo.ownerId;\n\n            if (appContext.ctx.req) {\n              domainUrl = appContext.ctx.req.headers.host;\n            }\n\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps,\n              user: user,\n              siteExists: siteExists,\n              siteInfo: siteInfo,\n              authUserIsAdmin: authUserIsAdmin,\n              domainUrl: domainUrl\n            });\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default AppComponent;","map":null,"metadata":{},"sourceType":"module"}