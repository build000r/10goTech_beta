{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { buildClient } from \"../../../../api/build-client\";\nimport { Segment, Card, Button, Grid, Message } from \"semantic-ui-react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { useMediaQuery } from \"../../../../hooks/use-media-query\";\nimport Slideshow from \"../../../../components/util/Slideshow\";\nimport Layout from \"../../../../components/layouts\";\n\nconst index = ({\n  products,\n  isAdmin,\n  siteTitle,\n  site\n}) => {\n  const adminLinks = slug => isAdmin ? /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsxs(Message, {\n      floating: true,\n      children: [/*#__PURE__*/_jsx(Message.Header, {\n        children: \"Only the site owner can see this.\"\n      }), /*#__PURE__*/_jsxs(Message.Content, {\n        children: [/*#__PURE__*/_jsx(Link, {\n          href: `/user/${siteTitle}/admin/${slug}`,\n          children: /*#__PURE__*/_jsx(Button, {\n            children: \"Edit Service\"\n          })\n        }), /*#__PURE__*/_jsx(Link, {\n          href: `/user/${siteTitle}/admin/${slug}/photo`,\n          children: /*#__PURE__*/_jsx(Button, {\n            children: \"Edit Photos\"\n          })\n        }), /*#__PURE__*/_jsx(Link, {\n          href: `/user/${siteTitle}/admin/${slug}/email`,\n          children: /*#__PURE__*/_jsx(Button, {\n            children: \"Edit Email\"\n          })\n        })]\n      })]\n    })\n  }) : null;\n\n  const productCard = (title, brief, link, id, slug) => /*#__PURE__*/_jsxs(Card, {\n    raised: true,\n    children: [adminLinks(slug), /*#__PURE__*/_jsx(Slideshow, {\n      productId: id\n    }), /*#__PURE__*/_jsxs(Card.Content, {\n      children: [/*#__PURE__*/_jsx(Card.Header, {\n        children: title\n      }), /*#__PURE__*/_jsx(Card.Description, {\n        children: brief\n      })]\n    }), /*#__PURE__*/_jsx(Card.Content, {\n      extra: true,\n      children: /*#__PURE__*/_jsx(Link, {\n        href: link,\n        className: \"mr-2\",\n        children: /*#__PURE__*/_jsx(Button, {\n          fluid: true,\n          color: \"linkedin\",\n          children: \"View Details\"\n        })\n      })\n    })]\n  }, id);\n\n  const renderItemsPerRow = num => /*#__PURE__*/_jsx(Card.Group, {\n    itemsPerRow: num,\n    children: products.map(p => {\n      let {\n        brief,\n        clickOptions,\n        description,\n        id,\n        site,\n        title,\n        slug\n      } = p;\n      return productCard(title, brief, `/user/${useRouter().query.site}/services/${slug}`, id, slug, site.title);\n    })\n  });\n\n  return /*#__PURE__*/_jsxs(Layout, {\n    smallLeaderboard: true,\n    leaderboardData: {\n      header: site.servicesPageHeadline || \"Capabilities\",\n      subHeader: site.servicesPageSubheadline || \"Discover, plan, and build a software company\",\n      dividerText: \"Browse & Select\"\n    },\n    children: [isAdmin ? /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsxs(Message, {\n        floating: true,\n        children: [/*#__PURE__*/_jsx(Message.Header, {\n          children: \"Only the site owner can see this.\"\n        }), /*#__PURE__*/_jsx(Message.Content, {\n          children: /*#__PURE__*/_jsx(Link, {\n            href: `/user/${siteTitle}/admin/create-service`,\n            children: /*#__PURE__*/_jsx(Button, {\n              children: \"Create a new Service\"\n            })\n          })\n        })]\n      })\n    }) : null, /*#__PURE__*/_jsx(Grid, {\n      columns: 1,\n      children: /*#__PURE__*/_jsx(Grid.Row, {\n        verticalAlign: \"top\",\n        centered: true,\n        children: /*#__PURE__*/_jsx(Grid.Column, {\n          stretched: true,\n          children: /*#__PURE__*/_jsx(Segment, {\n            basic: true,\n            children: useMediaQuery(700) ? renderItemsPerRow(1) : renderItemsPerRow(3)\n          })\n        })\n      })\n    })]\n  });\n};\n\nindex.getInitialProps = async context => {\n  const {\n    data: products\n  } = await buildClient(context).get(`/api/product/${context.query.site}`);\n  const {\n    data: currentUser\n  } = await buildClient(context).get(\"/api/users/currentuser\");\n  const user = currentUser.currentUser;\n  const {\n    data: site\n  } = await buildClient(context).get(`/api/site/${context.query.site}`);\n  let isAdmin;\n\n  if (user) {\n    isAdmin = site.ownerId === user.id;\n  } else {\n    isAdmin = false;\n  }\n\n  const siteTitle = site.title;\n  return {\n    products,\n    isAdmin,\n    siteTitle,\n    site\n  };\n};\n\nexport default index;","map":null,"metadata":{},"sourceType":"module"}