{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport Router, { useRouter } from \"next/router\";\nimport { emptyCart } from \"../../hooks/cart-helpers\";\nimport { Card, Icon, Button, Header, Container, TextArea, Segment } from \"semantic-ui-react\";\nimport { useRequest } from \"../../hooks/use-request\";\n\nconst Checkout = ({\n  products,\n  setRun = f => f,\n  run = undefined,\n  tellSuccess,\n  user\n}) => {\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    loading: false,\n    success: false,\n    error: \"\",\n    instance: {},\n    address: \"\",\n    productId: \"\"\n  });\n  const {\n    doRequest,\n    errors\n  } = useRequest({\n    url: `/api/order`,\n    method: \"post\",\n    body: {\n      products\n    } // onSuccess: () => Router.push(`/user/${useRouter().query.site}/user/orders`),\n\n  });\n  useEffect(() => {// console.log(\"refresh\", data.cart);\n  }, []);\n\n  const nextActionButton = () => {\n    if (data.success) {\n      return /*#__PURE__*/_jsx(Link, {\n        href: `/user/${useRouter().query.site}/user/orders`,\n        children: /*#__PURE__*/_jsx(Button, {\n          color: \"blue\",\n          fluid: true,\n          children: \"View my Orders\"\n        })\n      });\n    } else if (products.length > 0) {\n      return /*#__PURE__*/_jsx(Container, {\n        basic: true,\n        centered: true,\n        style: {\n          maxWidth: \"200px\"\n        },\n        children: /*#__PURE__*/_jsx(Button, {\n          fluid: true,\n          color: \"green\",\n          onClick: buy,\n          children: \"Submit Order\"\n        })\n      });\n    } else {\n      return \"\";\n    }\n  };\n\n  const showCheckout = () => user ? nextActionButton() : /*#__PURE__*/_jsxs(Segment, {\n    basic: true,\n    className: \"eight wide container\",\n    children: [/*#__PURE__*/_jsx(Header, {\n      textAlign: \"center\",\n      children: \"You must be signed in to submit your order.\"\n    }), /*#__PURE__*/_jsx(Container, {\n      centered: true,\n      style: {\n        maxWidth: \"100px\"\n      },\n      children: /*#__PURE__*/_jsxs(Button.Group, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsx(Link, {\n          href: `/user/${useRouter().query.site}/auth/signup`,\n          children: /*#__PURE__*/_jsx(Button, {\n            positive: true,\n            children: \"Sign up\"\n          })\n        }), /*#__PURE__*/_jsx(Button.Or, {}), /*#__PURE__*/_jsx(Link, {\n          href: `/user/${useRouter().query.site}/auth/signin`,\n          children: /*#__PURE__*/_jsx(Button, {\n            positive: true,\n            children: \"Sign in\"\n          })\n        })]\n      })\n    })]\n  });\n\n  const buy = async () => {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      loading: true\n    }));\n    console.log(\"products\", products);\n    await doRequest(); // console.log(errors);\n\n    emptyCart(() => {\n      setRun(!run); // run useEffect in parent Cart\n\n      tellSuccess(true);\n      setData({\n        loading: false,\n        success: true\n      });\n    });\n  };\n\n  const showError = error => /*#__PURE__*/_jsx(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? \"\" : \"none\"\n    },\n    children: error\n  });\n\n  const showSuccess = success => {\n    if (success) {\n      return /*#__PURE__*/_jsx(Header, {\n        textAlign: \"center\",\n        children: \"Your request has been submitted. Thanks!\"\n      });\n    } else {\n      return null;\n    }\n  };\n\n  const showLoading = loading => loading && /*#__PURE__*/_jsx(\"h2\", {\n    children: \"loading...\"\n  });\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"class\",\n    children: [showLoading(data.loading), showError(data.error), showSuccess(data.success), showCheckout()]\n  });\n};\n\nexport default Checkout;","map":null,"metadata":{},"sourceType":"module"}