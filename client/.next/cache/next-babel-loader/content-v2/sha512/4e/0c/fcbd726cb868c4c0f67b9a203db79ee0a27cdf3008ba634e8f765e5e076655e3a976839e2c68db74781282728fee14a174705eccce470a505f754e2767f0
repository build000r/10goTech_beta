{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from \"next/link\";\nimport { Button, Item } from \"semantic-ui-react\";\nimport { useRouter } from \"next/router\";\nimport { buildClient } from \"../../../../api/build-client\";\nimport Layout from \"../../../../components/layouts\";\n\nconst index = () => {\n  const {\n    site\n  } = useRouter().query;\n\n  const isTempTitle = sitetitle => sitetitle.includes(\"Change_This_Title\");\n\n  const showItem = (href, link, meta) => /*#__PURE__*/_jsx(Item, {\n    children: /*#__PURE__*/_jsxs(Item.Content, {\n      children: [/*#__PURE__*/_jsx(Item.Header, {\n        as: \"a\",\n        children: /*#__PURE__*/_jsx(Link, {\n          href: href,\n          children: link\n        })\n      }), /*#__PURE__*/_jsx(Item.Meta, {\n        children: meta\n      })]\n    })\n  });\n\n  return /*#__PURE__*/_jsx(Layout, {\n    smallLeaderboard: true,\n    leaderboardData: {\n      header: \"Client Portal\",\n      subHeader: \"Place order\",\n      dividerText: \"What would you like to do?\"\n    },\n    children: /*#__PURE__*/_jsxs(Item.Group, {\n      children: [showItem(`/user/${site}/user/orders`, \"Orders\", \"A history of your orders\"), showItem(`/user/${site}/services`, \"Browse Services\", \"\"), showItem(`/user/${site}/cart`, \"View Cart\", \"\"), showItem(`/user/${site}/auth/signout`, \"Sign Out\", \"\")]\n    })\n  });\n};\n\nindex.getInitialProps = async context => {\n  const {\n    data\n  } = await buildClient(context).get(`/api/site/${context.query.site}`);\n  return _objectSpread({}, data);\n};\n\nexport default index;","map":null,"metadata":{},"sourceType":"module"}