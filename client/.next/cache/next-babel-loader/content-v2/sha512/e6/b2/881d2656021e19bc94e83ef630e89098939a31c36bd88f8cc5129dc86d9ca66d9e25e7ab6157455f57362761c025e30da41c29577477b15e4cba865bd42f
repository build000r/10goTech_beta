{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, Fragment, useEffect } from \"react\";\nimport { Visibility, Menu, Label, Header as sUiHeader, Button, Icon, Divider } from \"semantic-ui-react\";\nimport Router, { useRouter } from \"next/router\";\nimport { itemTotal } from \"../../hooks/cart-helpers\";\nimport { useMediaQuery } from \"../../hooks/use-media-query\";\nconst menuStyle = {\n  border: \"0px\",\n  borderRadius: 0,\n  boxShadow: \"none\",\n  marginTop: \"0\"\n};\nconst fixedMenuStyle = {\n  border: \"0px\",\n  borderRadius: 0,\n  backgroundColor: \"#fff\",\n  borderBottom: \"1px\",\n  boxShadow: \"0px 3px 5px rgba(0, 0, 0, 0.2)\"\n};\n\nconst Header = ({\n  user,\n  authUserIsAdmin\n}) => {\n  const {\n    0: menuFixed,\n    1: setMenuFixed\n  } = useState(false);\n  const {\n    site\n  } = useRouter().query;\n\n  const stickTopMenu = () => setMenuFixed(true);\n\n  const unStickTopMenu = () => setMenuFixed(false);\n\n  const {\n    0: mobile,\n    1: setMobile\n  } = useState(false);\n\n  const navigate = url => {\n    setMobile(false);\n    Router.push(url);\n  };\n\n  const showMenuButtons = () => /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsx(Menu.Item, {\n      onClick: () => navigate(`/user/${site}`),\n      active: useRouter().pathname === \"/user/[site]\",\n      children: \"Home\"\n    }), /*#__PURE__*/_jsx(Menu.Item, {\n      onClick: () => navigate(`/user/${site}/services`),\n      active: useRouter().pathname === \"/user/[site]/services\",\n      children: \"Services\"\n    }), authUserIsAdmin ? null : /*#__PURE__*/_jsxs(Menu.Item, {\n      onClick: () => navigate(`/user/${site}/cart`),\n      active: useRouter().pathname === \"/user/[site]/cart\",\n      children: [\"Cart\", itemTotal() > 0 ? /*#__PURE__*/_jsx(Label, {\n        color: \"green\",\n        style: !mobile ? {\n          right: \"-14px\"\n        } : {\n          right: \"10px\",\n          bottom: \"9px\"\n        },\n        circular: true,\n        attached: \"bottom right\",\n        children: itemTotal()\n      }) : \"\"]\n    }), /*#__PURE__*/_jsx(Menu.Menu, {\n      position: \"right\",\n      children: !user ? /*#__PURE__*/_jsxs(Fragment, {\n        children: [/*#__PURE__*/_jsx(Menu.Item, {\n          onClick: () => navigate(`/user/${site}/auth/signin`),\n          as: \"a\",\n          active: useRouter().pathname === \"/user/[site]/auth/signin\",\n          children: \"Sign In\"\n        }), /*#__PURE__*/_jsx(Menu.Item, {\n          onClick: () => navigate(`/user/${site}/auth/signup`),\n          as: \"a\",\n          active: useRouter().pathname === \"/user/[site]/auth/signup\",\n          children: \"Sign Up\"\n        })]\n      }) : /*#__PURE__*/_jsx(Menu.Item, {\n        onClick: () => navigate(user.userOfSite === \"rfp\" ? `/user/${site}/admin` : `/user/${site}/user`),\n        active: useRouter().pathname === (user.userOfSite === \"rfp\" ? `/user/${site}/admin` : `/user/${site}/user`),\n        children: \"Account\"\n      })\n    })]\n  });\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsx(Visibility, {\n      onPassing: stickTopMenu,\n      onBottomVisible: unStickTopMenu,\n      once: false,\n      children: /*#__PURE__*/_jsxs(Menu, {\n        stackable: useMediaQuery(600),\n        fluid: useMediaQuery(600),\n        secondary: !useMediaQuery(600) || !mobile,\n        fixed: \"top\",\n        style: fixedMenuStyle,\n        style: {\n          margin: \"0\",\n          backgroundColor: \"white\"\n        },\n        children: [!useMediaQuery(600) ? showMenuButtons() : mobile ? showMenuButtons() : null, useMediaQuery(600) ? /*#__PURE__*/_jsx(Menu.Item, {\n          style: {\n            height: \"36px\"\n          },\n          onClick: () => setMobile(!mobile),\n          fluid: mobile.toString(),\n          icon: true,\n          children: /*#__PURE__*/_jsx(Icon, {\n            name: !mobile ? \"angle double down\" : \"angle double up\"\n          })\n        }) : null]\n      })\n    })\n  });\n};\n\nexport { Header as SiteHeader };","map":null,"metadata":{},"sourceType":"module"}