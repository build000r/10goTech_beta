{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Icon, Card, Message } from \"semantic-ui-react\";\nimport { buildClient } from \"../../../../api/build-client\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { Fragment, useState } from \"react\";\nimport VertCenterGrid from \"../../../../components/grid/vert-center\";\n\nconst quiz = () => {\n  const {\n    0: active,\n    1: setActive\n  } = useState(\"thisone\");\n  const {\n    site\n  } = useRouter().query;\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    question: 0,\n    employed: false,\n    idea: false,\n    msg: \"\"\n  });\n  const {\n    question,\n    employed,\n    msg,\n    idea\n  } = values;\n\n  const score = () =>\n  /*#__PURE__*/\n  //Great. Validation of your ability to perform a service + Validation of an employers willingness to pay for that service.\n  //     - No: While I applaud your interest in entrepreneurship, we’re probably not a good fit yet. Go out there and validate your ability to perform a service + validate an employers willingness to pay for that service first.\n  _jsxs(Card, {\n    children: [/*#__PURE__*/_jsx(Card.Header, {\n      as: \"h3\",\n      children: \"So far, you've...\"\n    }), employed ? /*#__PURE__*/_jsxs(Fragment, {\n      children: [/*#__PURE__*/_jsxs(Card.Content, {\n        extra: true,\n        children: [/*#__PURE__*/_jsx(Icon, {\n          name: \"check\"\n        }), \" validated ability to provide a service\"]\n      }), /*#__PURE__*/_jsxs(Card.Content, {\n        extra: true,\n        children: [/*#__PURE__*/_jsx(Icon, {\n          name: \"check\"\n        }), \" validated service is something someone will pay for\"]\n      })]\n    }) : \"\", idea ? /*#__PURE__*/_jsx(Fragment, {\n      children: /*#__PURE__*/_jsxs(Card.Content, {\n        extra: true,\n        children: [/*#__PURE__*/_jsx(Icon, {\n          name: \"check\"\n        }), \" Aren't trying to start a business you can't add value to!\"]\n      })\n    }) : \"\"]\n  });\n\n  const notForYou = () => msg ? /*#__PURE__*/_jsx(Message, {\n    children: msg\n  }) : \"\";\n\n  const handleChange = (name, value, msg) => e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: e.target.value || value,\n      msg: msg ? msg : \"\",\n      question: question + 1\n    }));\n  };\n\n  const buttons = (name, rightAnswer, wrongMessage) => {\n    // if a question, show yes/no otherwise show next question\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(Button, {\n        floated: \"right\",\n        onClick: handleChange(name, rightAnswer),\n        children: rightAnswer ? \"True\" : \"False\"\n      }), /*#__PURE__*/_jsx(Button, {\n        floated: \"left\",\n        onClick: handleChange(name, rightAnswer ? false : true, wrongMessage),\n        children: rightAnswer ? \"False\" : \"True\"\n      })]\n    });\n  };\n\n  const askQuestion = (header, name, rightAnswer, wrongMessage) => /*#__PURE__*/_jsxs(Card, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxs(Card.Header, {\n      as: \"h4\",\n      textAlign: \"center\",\n      children: [header, \" \"]\n    }), buttons(name, rightAnswer, wrongMessage)]\n  });\n\n  const showQuestion = i => {\n    if (i % 2) {\n      return /*#__PURE__*/_jsxs(Fragment, {\n        children: [score(), /*#__PURE__*/_jsxs(Button, {\n          fluid: true,\n          onClick: () => {\n            setValues(_objectSpread(_objectSpread({}, values), {}, {\n              question: question + 1\n            }));\n          },\n          children: [\" \", \"Next question\"]\n        })]\n      });\n    }\n\n    switch (i) {\n      case 0:\n        return askQuestion(\"I am, or was, employed\", \"employed\", true, \"go do something\");\n\n      case 2:\n        return askQuestion(\"I want to start a business related to services I've validated\", \"idea\", true, \"People need to stop starting businesses they have no business being in\");\n\n      default:\n        return /*#__PURE__*/_jsx(\"div\", {});\n    }\n  };\n\n  return /*#__PURE__*/_jsx(Fragment, {\n    children: /*#__PURE__*/_jsxs(VertCenterGrid, {\n      children: [employed ? \"\" : notForYou(), showQuestion(question)]\n    })\n  });\n};\n\nexport default quiz; //  POST TO REDDIT -> is my landing page too aggressive? - Take a look\n// through the no’s…\n// Idea to business\n// Is this for me?\n// Prerequisites:\n// 1. Validated skill set\n// The path of least resistance for skilled individuals to start an investable business.\n// - I am (or have been) employed\n//     - Yes:\n// - I have an idea for a business\n//     - Yes: is it related to the services you’ve validated?\n//         - Yes: okay great. The world does not need someone starting a business with zero experience.\n//         - No: Listen, you can do whatever you want, but you are making things incredibly difficult for yourself by removing the validation acquired in your previous employment.\n//             - Dear everyone, stop starting businesses you have no business starting.\n//     -  No: That’s okay. The validation you’ve acquired through your previous employment is a better starting place than “ideas” anyways. Take a minute to write down the validated services you’ve performed in the last question.\n// - I am dead set on doing arts and crafts\n//         - Arts and crafts: making a logo, picking brand colors, drag and dropping on website builders, investing (e.g. in software, a sales team, etc.) for scale without knowing if it WILL scale\n//     - Yes: This isn’t for you. None of that stuff matters right now.\n//     - No: Fantastic. I hear there are no more plots available in the Wordpress graveyard\n// - I am","map":null,"metadata":{},"sourceType":"module"}