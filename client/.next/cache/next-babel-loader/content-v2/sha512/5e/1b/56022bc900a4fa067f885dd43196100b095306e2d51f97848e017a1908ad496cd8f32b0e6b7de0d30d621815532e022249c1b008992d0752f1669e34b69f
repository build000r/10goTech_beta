{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/robbaratta/Desktop/code/projects/rfp/client/hooks/use-request.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { List, Message } from \"semantic-ui-react\";\n\nvar useRequest = function useRequest(_ref) {\n  _s();\n\n  var url = _ref.url,\n      method = _ref.method,\n      body = _ref.body;\n\n  var _useState = useState(null),\n      errors = _useState[0],\n      setErrors = _useState[1];\n\n  var doRequest = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios[method](url, body);\n\n            case 3:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.data);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              setErrors( /*#__PURE__*/_jsxDEV(Message, {\n                negative: true,\n                children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n                  children: \"There is a problem with your submission.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 14,\n                  columnNumber: 11\n                }, _this), /*#__PURE__*/_jsxDEV(List, {\n                  as: \"ul\",\n                  children: console.log(_context.t0.response.data)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 17,\n                  columnNumber: 11\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 13,\n                columnNumber: 9\n              }, _this));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function doRequest() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return {\n    doRequest: doRequest,\n    errors: errors\n  };\n};\n\n_s(useRequest, \"CBiIfGMAaAtFFE/cKx87b00YZJU=\");\n\nexport { useRequest };","map":{"version":3,"sources":["/Users/robbaratta/Desktop/code/projects/rfp/client/hooks/use-request.js"],"names":["axios","useState","List","Message","useRequest","url","method","body","errors","setErrors","doRequest","response","data","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,mBAA9B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA2B;AAAA;;AAAA,MAAxBC,GAAwB,QAAxBA,GAAwB;AAAA,MAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBAChBN,QAAQ,CAAC,IAAD,CADQ;AAAA,MACrCO,MADqC;AAAA,MAC7BC,SAD6B;;AAE5C,MAAMC,SAAS;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAESV,KAAK,CAACM,MAAD,CAAL,CAAcD,GAAd,EAAmBE,IAAnB,CAFT;;AAAA;AAERI,cAAAA,QAFQ;AAAA,+CAGPA,QAAQ,CAACC,IAHF;;AAAA;AAAA;AAAA;AAKdH,cAAAA,SAAS,eACP,QAAC,OAAD;AAAS,gBAAA,QAAQ,MAAjB;AAAA,wCACE,QAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAIE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,IAAT;AAAA,4BACGI,OAAO,CAACC,GAAR,CAAY,YAAIH,QAAJ,CAAaC,IAAzB;AADH;AAAA;AAAA;AAAA;AAAA,yBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,uBADO,CAAT;;AALc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATF,SAAS;AAAA;AAAA;AAAA,KAAf;;AAuBA,SAAO;AAAEA,IAAAA,SAAS,EAATA,SAAF;AAAaF,IAAAA,MAAM,EAANA;AAAb,GAAP;AACD,CA1BD;;GAAMJ,U;;AA4BN,SAASA,UAAT","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { List, Message } from \"semantic-ui-react\";\n\nconst useRequest = ({ url, method, body }) => {\n  const [errors, setErrors] = useState(null);\n  const doRequest = async () => {\n    try {\n      const response = await axios[method](url, body);\n      return response.data;\n    } catch (err) {\n      setErrors(\n        <Message negative>\n          <Message.Header>\n            There is a problem with your submission.\n          </Message.Header>\n          <List as=\"ul\">\n            {console.log(err.response.data)}\n            {/* {err.response.data.error.map((e) => (\n              <List.Item as=\"li\" key={e.message}>\n                {e.message}\n              </List.Item>\n            ))} */}\n          </List>\n        </Message>\n      );\n    }\n  };\n\n  return { doRequest, errors };\n};\n\nexport { useRequest };\n"]},"metadata":{},"sourceType":"module"}