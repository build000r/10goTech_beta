{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robbaratta/Desktop/code/projects/rfp/client/components/auth/signup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, Fragment, useEffect } from \"react\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { useRequest } from \"../../hooks/use-request\";\n\nconst Signup = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    userOfSite: \"rfp\",\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    success: false,\n    error: false,\n    msg: \"\",\n    loading: false\n  });\n  const {\n    doRequest,\n    errors\n  } = useRequest({\n    url: `/api/users/signup/${userOfSite}`,\n    // MUST CHANGE\n    method: \"post\",\n    body: {\n      name,\n      email,\n      phone,\n      password\n    }\n  });\n  const {\n    name,\n    phone,\n    email,\n    password,\n    success,\n    loading,\n    error,\n    msg,\n    userOfSite\n  } = values;\n\n  const handleChange = name => e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      msg: \"\",\n      error: false,\n      [name]: e.target.value\n    }));\n  };\n\n  const clickSubmit = async event => {\n    event.preventDefault(); // keep browser from reloading when btn click\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n\n    if (!name || !email || !password || !phone) {\n      return setValues(_objectSpread(_objectSpread({}, values), {}, {\n        error: true,\n        msg: \"Required fields are empty\"\n      }));\n    } // CREATE ACCOUNT LOGIC HERE\n\n\n    console.log({\n      name,\n      phone,\n      email,\n      password,\n      userOfSite\n    });\n    doRequest();\n  };\n\n  const showError = (part, point = \"below\") => {\n    if (msg && msg.includes([part])) {\n      return {\n        content: `Please enter your ${part}.`,\n        pointing: point\n      };\n    }\n  };\n\n  const redirectAfterLogin = () => {\n    console.log(\"redirecting..\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    success: success,\n    loading: loading,\n    children: [error && msg ? /*#__PURE__*/_jsxDEV(Message, {\n      negative: true,\n      header: msg,\n      content: \"Please make sure all the required fields are filled in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : \"\", success ? /*#__PURE__*/_jsxDEV(Message, {\n      success: true,\n      header: msg,\n      content: `Your activation link has been sent to ${email}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : null, success ? redirectAfterLogin() : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"name\"),\n        error: showError(\"name\"),\n        value: name,\n        fluid: true,\n        placeholder: \"Name\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"phone\"),\n        error: showError(\"phone\"),\n        value: phone,\n        fluid: true,\n        placeholder: \"Phone\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"email\"),\n        error: showError(\"email\"),\n        value: email,\n        fluid: true,\n        placeholder: \"Email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"password\"),\n        error: showError(\"password\"),\n        value: password,\n        fluid: true,\n        placeholder: \"Password\",\n        type: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        fluid: true,\n        onClick: clickSubmit,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\nexport { Signup };","map":{"version":3,"sources":["/Users/robbaratta/Desktop/code/projects/rfp/client/components/auth/signup.js"],"names":["useState","Fragment","useEffect","Form","Message","axios","useRequest","Signup","values","setValues","userOfSite","name","phone","email","password","success","error","msg","loading","doRequest","errors","url","method","body","handleChange","e","target","value","clickSubmit","event","preventDefault","console","log","showError","part","point","includes","content","pointing","redirectAfterLogin"],"mappings":"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","sourcesContent":["import { useState, Fragment, useEffect } from \"react\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { useRequest } from \"../../hooks/use-request\";\n\nconst Signup = () => {\n  const [values, setValues] = useState({\n    userOfSite: \"rfp\",\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    success: false,\n    error: false,\n    msg: \"\",\n    loading: false,\n  });\n\n  const { doRequest, errors } = useRequest({\n    url: `/api/users/signup/${userOfSite}`, // MUST CHANGE\n    method: \"post\",\n    body: {\n      name,\n      email,\n      phone,\n      password,\n    },\n  });\n\n  const {\n    name,\n    phone,\n    email,\n    password,\n    success,\n    loading,\n    error,\n    msg,\n    userOfSite,\n  } = values;\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, msg: \"\", error: false, [name]: e.target.value });\n  };\n\n  const clickSubmit = async (event) => {\n    event.preventDefault(); // keep browser from reloading when btn click\n\n    setValues({ ...values, loading: true });\n\n    if (!name || !email || !password || !phone) {\n      return setValues({\n        ...values,\n        error: true,\n        msg: \"Required fields are empty\",\n      });\n    }\n\n    // CREATE ACCOUNT LOGIC HERE\n    console.log({\n      name,\n      phone,\n      email,\n      password,\n      userOfSite,\n    });\n\n    doRequest();\n  };\n\n  const showError = (part, point = \"below\") => {\n    if (msg && msg.includes([part])) {\n      return { content: `Please enter your ${part}.`, pointing: point };\n    }\n  };\n\n  const redirectAfterLogin = () => {\n    console.log(\"redirecting..\");\n  };\n\n  return (\n    <Form success={success} loading={loading}>\n      {error && msg ? (\n        <Message\n          negative\n          header={msg}\n          content=\"Please make sure all the required fields are filled in.\"\n        />\n      ) : (\n        \"\"\n      )}\n      {success ? (\n        <Message\n          success\n          header={msg}\n          content={`Your activation link has been sent to ${email}`}\n        />\n      ) : null}\n      {success ? (\n        redirectAfterLogin()\n      ) : (\n        <Fragment>\n          <Form.Input\n            onChange={handleChange(\"name\")}\n            error={showError(\"name\")}\n            value={name}\n            fluid\n            placeholder=\"Name\"\n            type=\"text\"\n          />\n          <Form.Input\n            onChange={handleChange(\"phone\")}\n            error={showError(\"phone\")}\n            value={phone}\n            fluid\n            placeholder=\"Phone\"\n            type=\"text\"\n          />\n          <Form.Input\n            onChange={handleChange(\"email\")}\n            error={showError(\"email\")}\n            value={email}\n            fluid\n            placeholder=\"Email\"\n            type=\"email\"\n          />\n          <Form.Input\n            onChange={handleChange(\"password\")}\n            error={showError(\"password\")}\n            value={password}\n            fluid\n            placeholder=\"Password\"\n            type=\"Password\"\n          />\n          <Form.Button fluid onClick={clickSubmit}>\n            Sign Up\n          </Form.Button>\n        </Fragment>\n      )}\n    </Form>\n  );\n};\n\nexport { Signup };\n"]},"metadata":{},"sourceType":"module"}