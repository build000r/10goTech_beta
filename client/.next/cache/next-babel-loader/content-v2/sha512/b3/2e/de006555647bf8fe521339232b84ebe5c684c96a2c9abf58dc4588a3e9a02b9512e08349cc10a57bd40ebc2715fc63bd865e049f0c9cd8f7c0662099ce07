{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rjb/Desktop/code/projects/rfp/client/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport { useRouter } from \"next/router\";\nimport { Footer } from \"../components/nav/Footer\";\nimport { SiteHeader } from \"../components/nav/SiteHeader\";\nimport { AdminHeader } from \"../components/nav/AdminHeader\";\nimport { buildClient } from \"../api/build-client\";\nimport { checkExistenceOfSite } from \"../hooks/use-site-existence\";\nimport NoSite from \"../components/error/site-does-not-exist\";\nimport { useEffect } from \"react\";\nimport * as gtag from \"../components/util/gtag\";\nimport Layout from \"../components/layouts\";\n\nfunction AppComponent({\n  Component,\n  pageProps,\n  user,\n  siteExists,\n  authUserIsAdmin\n}) {\n  const router = useRouter();\n  const isAdmin = router.pathname.includes(\"/admin/[site]\");\n  useEffect(() => {\n    const handleRouteChange = url => {\n      gtag.pageview(url);\n    };\n\n    router.events.on(\"routeChangeComplete\", handleRouteChange);\n    return () => {\n      router.events.off(\"routeChangeComplete\", handleRouteChange);\n    };\n  }, [router.events]);\n\n  const renderHeader = () => {\n    return isAdmin ? /*#__PURE__*/_jsxDEV(AdminHeader, {\n      user: user,\n      siteExists: siteExists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(SiteHeader, {\n      user: user,\n      siteExists: siteExists,\n      authUserIsAdmin: authUserIsAdmin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderComponent = () => /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 33\n  }, this);\n\n  const layout = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderHeader(), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      siteType: isAdmin ? \"admin\" : \"user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this); // mon 8:42 change\n  // return <Layout layout={layout()} children={layout}></Layout>;\n\n\n  return layout(); // return siteExists ? layout() : <NoSite />;\n}\n\nAppComponent.getInitialProps = async appContext => {\n  const {\n    siteExists,\n    siteInfo\n  } = await checkExistenceOfSite({\n    context: appContext.ctx\n  });\n\n  if (!siteExists) {\n    return {\n      siteExists\n    };\n  }\n\n  const client = buildClient(appContext.ctx);\n  const {\n    data: currentUser\n  } = await client.get(\"/api/users/currentuser\");\n  const user = currentUser.currentUser;\n  let pageProps = {};\n\n  if (appContext.Component.getInitialProps) {\n    pageProps = await appContext.Component.getInitialProps(appContext.ctx);\n  }\n\n  const authUserIsAdmin = user && user.id === siteInfo.ownerId;\n  let domainUrl;\n\n  if (appContext.ctx.req) {\n    domainUrl = appContext.ctx.req.headers.host;\n  }\n\n  return {\n    pageProps,\n    user,\n    siteExists,\n    siteInfo,\n    authUserIsAdmin,\n    domainUrl\n  };\n};\n\nexport default AppComponent;","map":{"version":3,"sources":["/Users/rjb/Desktop/code/projects/rfp/client/pages/_app.js"],"names":["useRouter","Footer","SiteHeader","AdminHeader","buildClient","checkExistenceOfSite","NoSite","useEffect","gtag","Layout","AppComponent","Component","pageProps","user","siteExists","authUserIsAdmin","router","isAdmin","pathname","includes","handleRouteChange","url","pageview","events","on","off","renderHeader","renderComponent","layout","getInitialProps","appContext","siteInfo","context","ctx","client","data","currentUser","get","id","ownerId","domainUrl","req","headers","host"],"mappings":"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","sourcesContent":["import \"semantic-ui-css/semantic.min.css\";\nimport { useRouter } from \"next/router\";\nimport { Footer } from \"../components/nav/Footer\";\nimport { SiteHeader } from \"../components/nav/SiteHeader\";\nimport { AdminHeader } from \"../components/nav/AdminHeader\";\nimport { buildClient } from \"../api/build-client\";\nimport { checkExistenceOfSite } from \"../hooks/use-site-existence\";\nimport NoSite from \"../components/error/site-does-not-exist\";\nimport { useEffect } from \"react\";\nimport * as gtag from \"../components/util/gtag\";\nimport Layout from \"../components/layouts\";\n\nfunction AppComponent({\n  Component,\n  pageProps,\n  user,\n  siteExists,\n  authUserIsAdmin,\n}) {\n  const router = useRouter();\n  const isAdmin = router.pathname.includes(\"/admin/[site]\");\n\n  useEffect(() => {\n    const handleRouteChange = (url) => {\n      gtag.pageview(url);\n    };\n\n    router.events.on(\"routeChangeComplete\", handleRouteChange);\n\n    return () => {\n      router.events.off(\"routeChangeComplete\", handleRouteChange);\n    };\n  }, [router.events]);\n\n  const renderHeader = () => {\n    return isAdmin ? (\n      <AdminHeader user={user} siteExists={siteExists} />\n    ) : (\n      <SiteHeader\n        user={user}\n        siteExists={siteExists}\n        authUserIsAdmin={authUserIsAdmin}\n      />\n    );\n  };\n\n  const renderComponent = () => <Component {...pageProps} />;\n\n  const layout = () => (\n    <div>\n      {renderHeader()}\n\n      <Component {...pageProps} />\n\n      <Footer siteType={isAdmin ? \"admin\" : \"user\"} />\n    </div>\n  );\n\n  // mon 8:42 change\n  // return <Layout layout={layout()} children={layout}></Layout>;\n  return layout();\n\n  // return siteExists ? layout() : <NoSite />;\n}\n\nAppComponent.getInitialProps = async (appContext) => {\n  const { siteExists, siteInfo } = await checkExistenceOfSite({\n    context: appContext.ctx,\n  });\n\n  if (!siteExists) {\n    return { siteExists };\n  }\n\n  const client = buildClient(appContext.ctx);\n\n  const { data: currentUser } = await client.get(\"/api/users/currentuser\");\n  const user = currentUser.currentUser;\n\n  let pageProps = {};\n\n  if (appContext.Component.getInitialProps) {\n    pageProps = await appContext.Component.getInitialProps(appContext.ctx);\n  }\n\n  const authUserIsAdmin = user && user.id === siteInfo.ownerId;\n\n  let domainUrl;\n\n  if (appContext.ctx.req) {\n    domainUrl = appContext.ctx.req.headers.host;\n  }\n\n  return { pageProps, user, siteExists, siteInfo, authUserIsAdmin, domainUrl };\n};\n\nexport default AppComponent;\n"]},"metadata":{},"sourceType":"module"}