{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Card, Button, Message, Container, Segment, Header } from \"semantic-ui-react\";\nimport { buildClient } from \"../../../../api/build-client\";\nimport Layout from \"../../../../components/layouts\";\nimport Link from \"next/link\";\nimport { Fragment } from \"react\";\nimport { useAuth } from \"../../../../hooks/use-auth\";\nimport { useRouter } from \"next/router\";\n\nconst sites = ({\n  user,\n  sites\n}) => {\n  const isTempTitle = sitetitle => sitetitle.includes(\"Change_This_Title\");\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  const renderIfAuth = () => {\n    return /*#__PURE__*/_jsx(Layout, {\n      smallLeaderboard: true,\n      leaderboardData: {\n        header: \"Manage your Websites & Subscriptions\",\n        subHeader: \"\",\n        btnPath: `/admin/${user.userOfSite}/onboard/select-package`,\n        btnText: \"Create New Website\",\n        dividerText: \"Your Current Websites\"\n      },\n      children: /*#__PURE__*/_jsx(Card.Group, {\n        centered: true,\n        children: sites.length > 0 ? sites.map(s => /*#__PURE__*/_jsxs(Card, {\n          children: [/*#__PURE__*/_jsx(Card.Content, {\n            children: /*#__PURE__*/_jsx(Card.Header, {\n              as: \"h3\",\n              children: isTempTitle(s.title) ? \"Your New Site!\" : capitalizeFirstLetter(s.title) + \" Site\"\n            })\n          }), /*#__PURE__*/_jsx(Card.Content, {\n            extra: true,\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"ui two buttons\",\n              children: [/*#__PURE__*/_jsx(Link, {\n                href: `/admin/${user.userOfSite}/account/${s.title}`,\n                children: /*#__PURE__*/_jsx(Button, {\n                  basic: true,\n                  color: \"blue\",\n                  children: \"Subscription\"\n                })\n              }), /*#__PURE__*/_jsx(Link, {\n                href: `/user/${s.title}/admin`,\n                children: /*#__PURE__*/_jsx(Button, {\n                  basic: true,\n                  color: \"green\",\n                  children: \"Site\"\n                })\n              })]\n            })\n          })]\n        }, s.title)) : \"no sites created yet\"\n      })\n    });\n  };\n\n  return useAuth({\n    user,\n    currentUrlSite: useRouter().query.site,\n    renderIfAuth\n  });\n};\n\nsites.getInitialProps = async context => {\n  const {\n    data: currentUser\n  } = await buildClient(context).get(\"/api/users/currentuser\");\n  const user = currentUser.currentUser;\n\n  if (user) {\n    const {\n      data: userSites\n    } = await buildClient(context).get(`/api/site`);\n    const sites = userSites.userSites;\n    return {\n      user,\n      sites\n    };\n  } else {\n    return {\n      user\n    };\n  }\n};\n\nexport default sites;","map":null,"metadata":{},"sourceType":"module"}