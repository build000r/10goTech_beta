{"ast":null,"code":"import _defineProperty from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\nimport { Item, Button, Form, TextArea, Segment, Message } from \"semantic-ui-react\";\nimport Checkbox from \"../../components/user-site/Checkbox\";\nimport Link from \"next/link\";\n\nvar CheckoutCard = function CheckoutCard(_ref) {\n  var product = _ref.product,\n      isAdmin = _ref.isAdmin;\n\n  var _useState = useState({\n    showAddToCartButton: true,\n    // depends if logged in\n    redirect: \"\",\n    clickOptionsSelected: [],\n    userMessage: \"\",\n    loading: false\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var showAddToCartButton = values.showAddToCartButton,\n      redirect = values.redirect,\n      selected = values.selected,\n      userMessage = values.userMessage,\n      loading = values.loading;\n\n  var adminLinks = function adminLinks() {\n    return isAdmin ? /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsxs(Message, {\n        floating: true,\n        children: [/*#__PURE__*/_jsx(Message.Header, {\n          children: \"Only the site owner can see this.\"\n        }), /*#__PURE__*/_jsxs(Message.Content, {\n          children: [/*#__PURE__*/_jsx(Link, {\n            href: \"/user/\".concat(product.site.title, \"/admin/\").concat(product.slug),\n            children: /*#__PURE__*/_jsx(Button, {\n              children: \"Edit/Delete Service\"\n            })\n          }), /*#__PURE__*/_jsx(Link, {\n            href: \"/user/\".concat(product.site.title, \"/admin/\").concat(product.slug, \"/photo\"),\n            children: /*#__PURE__*/_jsx(Button, {\n              children: \"Edit Photos\"\n            })\n          }), /*#__PURE__*/_jsx(Link, {\n            href: \"/user/\".concat(product.site.title, \"/admin/\").concat(product.slug, \"/email\"),\n            children: /*#__PURE__*/_jsx(Button, {\n              children: \"Edit Email\"\n            })\n          })]\n        })]\n      })\n    }) : null;\n  };\n\n  var addCartItemToLocalStorage = function addCartItemToLocalStorage(item) {\n    var cart = [];\n\n    if (false) {\n      return;\n    }\n\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n\n    cart.push({\n      item: item,\n      count: 1\n    }); // not removing duplicates\n\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  };\n\n  var showAddToCart = function showAddToCart(showAddToCartButton) {\n    return showAddToCartButton && /*#__PURE__*/_jsx(Link, {\n      href: \"/user/\".concat(product.site.title, \"/cart\"),\n      fluid: true,\n      children: /*#__PURE__*/_jsx(Button, {\n        fluid: true,\n        color: \"green\",\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  product.clickOptionsSelected = values.clickOptionsSelected;\n                  product.userMessage = values.userMessage;\n                  console.log(\"product\", product);\n                  addCartItemToLocalStorage(product);\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        })),\n        children: \"Add to cart\"\n      })\n    });\n  };\n\n  var handleClickOptions = function handleClickOptions(opts) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      clickOptionsSelected: opts\n    }));\n  };\n\n  var showCustomTextArea = function showCustomTextArea() {\n    return /*#__PURE__*/_jsx(Form, {\n      children: /*#__PURE__*/_jsx(TextArea, {\n        placeholder: product.customerNote,\n        onChange: function onChange(e) {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            userMessage: e.target.value\n          }));\n        },\n        className: \"form-control\",\n        value: userMessage\n      })\n    });\n  };\n\n  var checkoutCard = function checkoutCard() {\n    var _product$clickOptions;\n\n    return /*#__PURE__*/_jsxs(Item.Group, {\n      centered: true,\n      children: [adminLinks(), /*#__PURE__*/_jsx(Item, {\n        centered: true,\n        children: /*#__PURE__*/_jsxs(Item.Content, {\n          style: {\n            marginTop: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsx(Item.Description, {\n            style: {\n              marginBottom: \"3rem\"\n            },\n            children: product.description\n          }), /*#__PURE__*/_jsx(Item.Extra, {\n            fluid: true,\n            style: (_product$clickOptions = product.clickOptions[0]) !== null && _product$clickOptions !== void 0 && _product$clickOptions.name ? {} : {\n              display: \"none\"\n            },\n            children: Checkbox(product.clickOptions, handleClickOptions)\n          }), showCustomTextArea()]\n        })\n      }), /*#__PURE__*/_jsx(Item, {\n        children: /*#__PURE__*/_jsx(Item.Extra, {\n          fluid: true,\n          children: isAdmin ? /*#__PURE__*/_jsx(Button, {\n            active: false,\n            fluid: true,\n            color: \"green\",\n            children: \"Add to cart (disabled while administrator is logged in)\"\n          }) : showAddToCart(showAddToCartButton)\n        })\n      }), /*#__PURE__*/_jsx(\"br\", {})]\n    });\n  };\n\n  return checkoutCard();\n};\n\nexport default CheckoutCard;","map":null,"metadata":{},"sourceType":"module"}