{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rjb/Desktop/code/projects/rfp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// create the email associated with this service\nimport { buildClient } from \"../../../../../api/build-client\";\nimport UpdateOrderEmail from \"../../../../../components/user-site/UpdateOrderEmail\";\nimport Layout from \"../../../../../components/layouts\";\nimport { useRouter } from \"next/router\";\n\nvar index = function index(_ref) {\n  var email = _ref.email,\n      ownerId = _ref.ownerId;\n  return /*#__PURE__*/_jsx(Layout, {\n    leaderboardData: {\n      header: \"Customize your automated reply\",\n      subHeader: \"This is email is sent immediately upon receipt of order\"\n    },\n    children: /*#__PURE__*/_jsx(UpdateOrderEmail, {\n      email: email,\n      path: useRouter().asPath,\n      ownerId: ownerId\n    })\n  });\n};\n\nindex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _yield$buildClient$ge, product, _yield$buildClient$ge2, email;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return buildClient(context).get(\"/api/product/\".concat(context.query.site, \"/\").concat(context.query.service));\n\n          case 2:\n            _yield$buildClient$ge = _context.sent;\n            product = _yield$buildClient$ge.data;\n            _context.next = 6;\n            return buildClient(context).get(\"/api/notification/email-by-product/\".concat(product.id));\n\n          case 6:\n            _yield$buildClient$ge2 = _context.sent;\n            email = _yield$buildClient$ge2.data;\n            return _context.abrupt(\"return\", {\n              email: email,\n              ownerId: product.site.ownerId\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default index;","map":null,"metadata":{},"sourceType":"module"}