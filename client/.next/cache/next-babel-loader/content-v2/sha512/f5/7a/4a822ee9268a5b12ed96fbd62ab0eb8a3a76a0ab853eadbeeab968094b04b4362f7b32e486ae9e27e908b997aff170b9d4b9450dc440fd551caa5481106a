{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/robbaratta/Desktop/code/projects/rfp/client/components/auth/signup.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, Fragment, useEffect } from \"react\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\n\nvar Signup = function Signup() {\n  _s();\n\n  var _useState = useState({\n    userOfSite: \"rfp\",\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    success: false,\n    error: false,\n    msg: \"\",\n    loading: false\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var name = values.name,\n      phone = values.phone,\n      email = values.email,\n      password = values.password,\n      success = values.success,\n      loading = values.loading,\n      error = values.error,\n      msg = values.msg,\n      userOfSite = values.userOfSite;\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({\n        msg: \"\",\n        error: false\n      }, name, e.target.value)));\n    };\n  };\n\n  var clickSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault(); // keep browser from reloading when btn click\n\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: true\n              }));\n\n              if (!(!name || !email || !password || !phone)) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setValues(_objectSpread(_objectSpread({}, values), {}, {\n                error: true,\n                msg: \"Required fields are empty\"\n              })));\n\n            case 4:\n              // CREATE ACCOUNT LOGIC HERE\n              console.log({\n                name: name,\n                phone: phone,\n                email: email,\n                password: password,\n                userOfSite: userOfSite\n              });\n              _context.prev = 5;\n              _context.next = 8;\n              return axios.post(\"/api/users/signup/\".concat(userOfSite), {\n                name: name,\n                email: email,\n                phone: phone,\n                password: password\n              });\n\n            case 8:\n              res = _context.sent;\n              console.log(res.data);\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                success: true,\n                loading: false,\n                msg: \"\"\n              }));\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](5);\n              console.log(_context.t0.response.data);\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                success: false,\n                loading: false,\n                error: true,\n                msg: _context.t0.response.data.errors[0].message\n              }));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 13]]);\n    }));\n\n    return function clickSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var showError = function showError(part) {\n    var point = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"below\";\n\n    if (msg && msg.includes([part])) {\n      return {\n        content: \"Please enter your \".concat(part, \".\"),\n        pointing: point\n      };\n    }\n  };\n\n  var redirectAfterLogin = function redirectAfterLogin() {\n    console.log(\"redirecting..\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    success: success,\n    loading: loading,\n    children: [error && msg ? /*#__PURE__*/_jsxDEV(Message, {\n      negative: true,\n      header: msg,\n      content: \"Please make sure all the required fields are filled in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, _this) : \"\", success ? /*#__PURE__*/_jsxDEV(Message, {\n      success: true,\n      header: msg,\n      content: \"Your activation link has been sent to \".concat(email)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, _this) : null, success ? redirectAfterLogin() : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"name\"),\n        error: showError(\"name\"),\n        value: name,\n        fluid: true,\n        placeholder: \"Name\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"phone\"),\n        error: showError(\"phone\"),\n        value: phone,\n        fluid: true,\n        placeholder: \"Phone\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"email\"),\n        error: showError(\"email\"),\n        value: email,\n        fluid: true,\n        placeholder: \"Email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleChange(\"password\"),\n        error: showError(\"password\"),\n        value: password,\n        fluid: true,\n        placeholder: \"Password\",\n        type: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        fluid: true,\n        onClick: clickSubmit,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Signup, \"FCelbuDxXTPAm75wEtcf2VVK21s=\");\n\n_c = Signup;\nexport { Signup };\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/robbaratta/Desktop/code/projects/rfp/client/components/auth/signup.js"],"names":["useState","Fragment","useEffect","Form","Message","axios","useRouter","Signup","userOfSite","name","phone","email","password","success","error","msg","loading","values","setValues","handleChange","e","target","value","clickSubmit","event","preventDefault","console","log","post","res","data","response","errors","message","showError","part","point","includes","content","pointing","redirectAfterLogin"],"mappings":"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","sourcesContent":["import { useState, Fragment, useEffect } from \"react\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\n\nconst Signup = () => {\n  const [values, setValues] = useState({\n    userOfSite: \"rfp\",\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    success: false,\n    error: false,\n    msg: \"\",\n    loading: false,\n  });\n\n  const {\n    name,\n    phone,\n    email,\n    password,\n    success,\n    loading,\n    error,\n    msg,\n    userOfSite,\n  } = values;\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, msg: \"\", error: false, [name]: e.target.value });\n  };\n\n  const clickSubmit = async (event) => {\n    event.preventDefault(); // keep browser from reloading when btn click\n\n    setValues({ ...values, loading: true });\n\n    if (!name || !email || !password || !phone) {\n      return setValues({\n        ...values,\n        error: true,\n        msg: \"Required fields are empty\",\n      });\n    }\n\n    // CREATE ACCOUNT LOGIC HERE\n    console.log({\n      name,\n      phone,\n      email,\n      password,\n      userOfSite,\n    });\n\n    try {\n      const res = await axios.post(`/api/users/signup/${userOfSite}`, {\n        name,\n        email,\n        phone,\n        password,\n      });\n      console.log(res.data);\n      setValues({ ...values, success: true, loading: false, msg: \"\" });\n    } catch (err) {\n      console.log(err.response.data);\n      setValues({\n        ...values,\n        success: false,\n        loading: false,\n        error: true,\n        msg: err.response.data.errors[0].message,\n      });\n    }\n  };\n\n  const showError = (part, point = \"below\") => {\n    if (msg && msg.includes([part])) {\n      return { content: `Please enter your ${part}.`, pointing: point };\n    }\n  };\n\n  const redirectAfterLogin = () => {\n    console.log(\"redirecting..\");\n  };\n\n  return (\n    <Form success={success} loading={loading}>\n      {error && msg ? (\n        <Message\n          negative\n          header={msg}\n          content=\"Please make sure all the required fields are filled in.\"\n        />\n      ) : (\n        \"\"\n      )}\n      {success ? (\n        <Message\n          success\n          header={msg}\n          content={`Your activation link has been sent to ${email}`}\n        />\n      ) : null}\n      {success ? (\n        redirectAfterLogin()\n      ) : (\n        <Fragment>\n          <Form.Input\n            onChange={handleChange(\"name\")}\n            error={showError(\"name\")}\n            value={name}\n            fluid\n            placeholder=\"Name\"\n            type=\"text\"\n          />\n          <Form.Input\n            onChange={handleChange(\"phone\")}\n            error={showError(\"phone\")}\n            value={phone}\n            fluid\n            placeholder=\"Phone\"\n            type=\"text\"\n          />\n          <Form.Input\n            onChange={handleChange(\"email\")}\n            error={showError(\"email\")}\n            value={email}\n            fluid\n            placeholder=\"Email\"\n            type=\"email\"\n          />\n          <Form.Input\n            onChange={handleChange(\"password\")}\n            error={showError(\"password\")}\n            value={password}\n            fluid\n            placeholder=\"Password\"\n            type=\"Password\"\n          />\n          <Form.Button fluid onClick={clickSubmit}>\n            Sign Up\n          </Form.Button>\n        </Fragment>\n      )}\n    </Form>\n  );\n};\n\nexport { Signup };\n"]},"metadata":{},"sourceType":"module"}