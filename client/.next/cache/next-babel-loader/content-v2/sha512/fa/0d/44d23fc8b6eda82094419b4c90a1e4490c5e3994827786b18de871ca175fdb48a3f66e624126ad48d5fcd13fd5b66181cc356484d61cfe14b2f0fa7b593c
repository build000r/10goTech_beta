{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { List, Message } from \"semantic-ui-react\";\n\nconst useRequest = ({\n  url,\n  method,\n  body,\n  onSuccess\n}) => {\n  const {\n    0: errors,\n    1: setErrors\n  } = useState(null);\n  const {\n    0: errMsgArr,\n    1: setErrMsgArr\n  } = useState(null);\n\n  const doRequest = async (props = {}) => {\n    try {\n      setErrors(null);\n      const response = await axios[method](url, _objectSpread(_objectSpread({}, body), props));\n\n      if (onSuccess) {\n        onSuccess(response.data);\n      }\n\n      return response.data;\n    } catch (err) {\n      console.log(\" did you import Router from next/router?\", err);\n      setErrors( /*#__PURE__*/_jsxs(Message, {\n        negative: true,\n        children: [/*#__PURE__*/_jsx(Message.Header, {\n          children: \"There is a problem with the form submission.\"\n        }), /*#__PURE__*/_jsx(List, {\n          as: \"ul\",\n          children: err.response.data.errors.map(e => /*#__PURE__*/_jsx(List.Item, {\n            as: \"li\",\n            children: e.message\n          }, e.message))\n        })]\n      }));\n      setErrMsgArr(err.response.data.errors.map(e => e.message));\n    }\n  };\n\n  return {\n    doRequest,\n    errors,\n    errMsgArr\n  };\n};\n\nexport { useRequest };","map":null,"metadata":{},"sourceType":"module"}